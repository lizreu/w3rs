use w3_derive::cc;

const fn mouse_button_type(i: i32) -> i32 {
    1 << (i - 1)
}

pub const PLAYER_COLOR_RED: i32 = 0;
pub const PLAYER_COLOR_BLUE: i32 = 1;
pub const PLAYER_COLOR_CYAN: i32 = 2;
pub const PLAYER_COLOR_PURPLE: i32 = 3;
pub const PLAYER_COLOR_YELLOW: i32 = 4;
pub const PLAYER_COLOR_ORANGE: i32 = 5;
pub const PLAYER_COLOR_GREEN: i32 = 6;
pub const PLAYER_COLOR_PINK: i32 = 7;
pub const PLAYER_COLOR_LIGHT_GRAY: i32 = 8;
pub const PLAYER_COLOR_LIGHT_BLUE: i32 = 9;
pub const PLAYER_COLOR_AQUA: i32 = 10;
pub const PLAYER_COLOR_BROWN: i32 = 11;
pub const PLAYER_COLOR_MAROON: i32 = 12;
pub const PLAYER_COLOR_NAVY: i32 = 13;
pub const PLAYER_COLOR_TURQUOISE: i32 = 14;
pub const PLAYER_COLOR_VIOLET: i32 = 15;
pub const PLAYER_COLOR_WHEAT: i32 = 16;
pub const PLAYER_COLOR_PEACH: i32 = 17;
pub const PLAYER_COLOR_MINT: i32 = 18;
pub const PLAYER_COLOR_LAVENDER: i32 = 19;
pub const PLAYER_COLOR_COAL: i32 = 20;
pub const PLAYER_COLOR_SNOW: i32 = 21;
pub const PLAYER_COLOR_EMERALD: i32 = 22;
pub const PLAYER_COLOR_PEANUT: i32 = 23;

pub const RACE_HUMAN: i32 = 1;
pub const RACE_ORC: i32 = 2;
pub const RACE_UNDEAD: i32 = 3;
pub const RACE_NIGHTELF: i32 = 4;
pub const RACE_DEMON: i32 = 5;
pub const RACE_OTHER: i32 = 7;

pub const PLAYER_GAME_RESULT_VICTORY: i32 = 0;
pub const PLAYER_GAME_RESULT_DEFEAT: i32 = 1;
pub const PLAYER_GAME_RESULT_TIE: i32 = 2;
pub const PLAYER_GAME_RESULT_NEUTRAL: i32 = 3;

pub const ALLIANCE_PASSIVE: i32 = 0;
pub const ALLIANCE_HELP_REQUEST: i32 = 1;
pub const ALLIANCE_HELP_RESPONSE: i32 = 2;
pub const ALLIANCE_SHARED_XP: i32 = 3;
pub const ALLIANCE_SHARED_SPELLS: i32 = 4;
pub const ALLIANCE_SHARED_VISION: i32 = 5;
pub const ALLIANCE_SHARED_CONTROL: i32 = 6;
pub const ALLIANCE_SHARED_ADVANCED_CONTROL: i32 = 7;
pub const ALLIANCE_RESCUABLE: i32 = 8;
pub const ALLIANCE_SHARED_VISION_FORCED: i32 = 9;

pub const VERSION_REIGN_OF_CHAOS: i32 = 0;
pub const VERSION_FROZEN_THRONE: i32 = 1;

pub const ATTACK_TYPE_NORMAL: i32 = 0;
pub const ATTACK_TYPE_MELEE: i32 = 1;
pub const ATTACK_TYPE_PIERCE: i32 = 2;
pub const ATTACK_TYPE_SIEGE: i32 = 3;
pub const ATTACK_TYPE_MAGIC: i32 = 4;
pub const ATTACK_TYPE_CHAOS: i32 = 5;
pub const ATTACK_TYPE_HERO: i32 = 6;

pub const DAMAGE_TYPE_UNKNOWN: i32 = 0;
pub const DAMAGE_TYPE_NORMAL: i32 = 4;
pub const DAMAGE_TYPE_ENHANCED: i32 = 5;
pub const DAMAGE_TYPE_FIRE: i32 = 8;
pub const DAMAGE_TYPE_COLD: i32 = 9;
pub const DAMAGE_TYPE_LIGHTNING: i32 = 10;
pub const DAMAGE_TYPE_POISON: i32 = 11;
pub const DAMAGE_TYPE_DISEASE: i32 = 12;
pub const DAMAGE_TYPE_DIVINE: i32 = 13;
pub const DAMAGE_TYPE_MAGIC: i32 = 14;
pub const DAMAGE_TYPE_SONIC: i32 = 15;
pub const DAMAGE_TYPE_ACID: i32 = 16;
pub const DAMAGE_TYPE_FORCE: i32 = 17;
pub const DAMAGE_TYPE_DEATH: i32 = 18;
pub const DAMAGE_TYPE_MIND: i32 = 19;
pub const DAMAGE_TYPE_PLANT: i32 = 20;
pub const DAMAGE_TYPE_DEFENSIVE: i32 = 21;
pub const DAMAGE_TYPE_DEMOLITION: i32 = 22;
pub const DAMAGE_TYPE_SLOW_POISON: i32 = 23;
pub const DAMAGE_TYPE_SPIRIT_LINK: i32 = 24;
pub const DAMAGE_TYPE_SHADOW_STRIKE: i32 = 25;
pub const DAMAGE_TYPE_UNIVERSAL: i32 = 26;

pub const WEAPON_TYPE_WHOKNOWS: i32 = 0;
pub const WEAPON_TYPE_METAL_LIGHT_CHOP: i32 = 1;
pub const WEAPON_TYPE_METAL_MEDIUM_CHOP: i32 = 2;
pub const WEAPON_TYPE_METAL_HEAVY_CHOP: i32 = 3;
pub const WEAPON_TYPE_METAL_LIGHT_SLICE: i32 = 4;
pub const WEAPON_TYPE_METAL_MEDIUM_SLICE: i32 = 5;
pub const WEAPON_TYPE_METAL_HEAVY_SLICE: i32 = 6;
pub const WEAPON_TYPE_METAL_MEDIUM_BASH: i32 = 7;
pub const WEAPON_TYPE_METAL_HEAVY_BASH: i32 = 8;
pub const WEAPON_TYPE_METAL_MEDIUM_STAB: i32 = 9;
pub const WEAPON_TYPE_METAL_HEAVY_STAB: i32 = 10;
pub const WEAPON_TYPE_WOOD_LIGHT_SLICE: i32 = 11;
pub const WEAPON_TYPE_WOOD_MEDIUM_SLICE: i32 = 12;
pub const WEAPON_TYPE_WOOD_HEAVY_SLICE: i32 = 13;
pub const WEAPON_TYPE_WOOD_LIGHT_BASH: i32 = 14;
pub const WEAPON_TYPE_WOOD_MEDIUM_BASH: i32 = 15;
pub const WEAPON_TYPE_WOOD_HEAVY_BASH: i32 = 16;
pub const WEAPON_TYPE_WOOD_LIGHT_STAB: i32 = 17;
pub const WEAPON_TYPE_WOOD_MEDIUM_STAB: i32 = 18;
pub const WEAPON_TYPE_CLAW_LIGHT_SLICE: i32 = 19;
pub const WEAPON_TYPE_CLAW_MEDIUM_SLICE: i32 = 20;
pub const WEAPON_TYPE_CLAW_HEAVY_SLICE: i32 = 21;
pub const WEAPON_TYPE_AXE_MEDIUM_CHOP: i32 = 22;
pub const WEAPON_TYPE_ROCK_HEAVY_BASH: i32 = 23;

pub const PATHING_TYPE_ANY: i32 = 0;
pub const PATHING_TYPE_WALKABILITY: i32 = 1;
pub const PATHING_TYPE_FLYABILITY: i32 = 2;
pub const PATHING_TYPE_BUILDABILITY: i32 = 3;
pub const PATHING_TYPE_PEONHARVESTPATHING: i32 = 4;
pub const PATHING_TYPE_BLIGHTPATHING: i32 = 5;
pub const PATHING_TYPE_FLOATABILITY: i32 = 6;
pub const PATHING_TYPE_AMPHIBIOUSPATHING: i32 = 7;

pub const MOUSE_BUTTON_TYPE_LEFT: i32 = mouse_button_type(1);
pub const MOUSE_BUTTON_TYPE_MIDDLE: i32 = mouse_button_type(2);
pub const MOUSE_BUTTON_TYPE_RIGHT: i32 = mouse_button_type(3);

pub const ANIM_TYPE_BIRTH: i32 = 0;
pub const ANIM_TYPE_DEATH: i32 = 1;
pub const ANIM_TYPE_DECAY: i32 = 2;
pub const ANIM_TYPE_DISSIPATE: i32 = 3;
pub const ANIM_TYPE_STAND: i32 = 4;
pub const ANIM_TYPE_WALK: i32 = 5;
pub const ANIM_TYPE_ATTACK: i32 = 6;
pub const ANIM_TYPE_MORPH: i32 = 7;
pub const ANIM_TYPE_SLEEP: i32 = 8;
pub const ANIM_TYPE_SPELL: i32 = 9;
pub const ANIM_TYPE_PORTRAIT: i32 = 10;

pub const SUBANIM_TYPE_ROOTED: i32 = 11;
pub const SUBANIM_TYPE_ALTERNATE_EX: i32 = 12;
pub const SUBANIM_TYPE_LOOPING: i32 = 13;
pub const SUBANIM_TYPE_SLAM: i32 = 14;
pub const SUBANIM_TYPE_THROW: i32 = 15;
pub const SUBANIM_TYPE_SPIKED: i32 = 16;
pub const SUBANIM_TYPE_FAST: i32 = 17;
pub const SUBANIM_TYPE_SPIN: i32 = 18;
pub const SUBANIM_TYPE_READY: i32 = 19;
pub const SUBANIM_TYPE_CHANNEL: i32 = 20;
pub const SUBANIM_TYPE_DEFEND: i32 = 21;
pub const SUBANIM_TYPE_VICTORY: i32 = 22;
pub const SUBANIM_TYPE_TURN: i32 = 23;
pub const SUBANIM_TYPE_LEFT: i32 = 24;
pub const SUBANIM_TYPE_RIGHT: i32 = 25;
pub const SUBANIM_TYPE_FIRE: i32 = 26;
pub const SUBANIM_TYPE_FLESH: i32 = 27;
pub const SUBANIM_TYPE_HIT: i32 = 28;
pub const SUBANIM_TYPE_WOUNDED: i32 = 29;
pub const SUBANIM_TYPE_LIGHT: i32 = 30;
pub const SUBANIM_TYPE_MODERATE: i32 = 31;
pub const SUBANIM_TYPE_SEVERE: i32 = 32;
pub const SUBANIM_TYPE_CRITICAL: i32 = 33;
pub const SUBANIM_TYPE_COMPLETE: i32 = 34;
pub const SUBANIM_TYPE_GOLD: i32 = 35;
pub const SUBANIM_TYPE_LUMBER: i32 = 36;
pub const SUBANIM_TYPE_WORK: i32 = 37;
pub const SUBANIM_TYPE_TALK: i32 = 38;
pub const SUBANIM_TYPE_FIRST: i32 = 39;
pub const SUBANIM_TYPE_SECOND: i32 = 40;
pub const SUBANIM_TYPE_THIRD: i32 = 41;
pub const SUBANIM_TYPE_FOURTH: i32 = 42;
pub const SUBANIM_TYPE_FIFTH: i32 = 43;
pub const SUBANIM_TYPE_ONE: i32 = 44;
pub const SUBANIM_TYPE_TWO: i32 = 45;
pub const SUBANIM_TYPE_THREE: i32 = 46;
pub const SUBANIM_TYPE_FOUR: i32 = 47;
pub const SUBANIM_TYPE_FIVE: i32 = 48;
pub const SUBANIM_TYPE_SMALL: i32 = 49;
pub const SUBANIM_TYPE_MEDIUM: i32 = 50;
pub const SUBANIM_TYPE_LARGE: i32 = 51;
pub const SUBANIM_TYPE_UPGRADE: i32 = 52;
pub const SUBANIM_TYPE_DRAIN: i32 = 53;
pub const SUBANIM_TYPE_FILL: i32 = 54;
pub const SUBANIM_TYPE_CHAINLIGHTNING: i32 = 55;
pub const SUBANIM_TYPE_EATTREE: i32 = 56;
pub const SUBANIM_TYPE_PUKE: i32 = 57;
pub const SUBANIM_TYPE_FLAIL: i32 = 58;
pub const SUBANIM_TYPE_OFF: i32 = 59;
pub const SUBANIM_TYPE_SWIM: i32 = 60;
pub const SUBANIM_TYPE_ENTANGLE: i32 = 61;
pub const SUBANIM_TYPE_BERSERK: i32 = 62;

pub const RACE_PREF_HUMAN: i32 = 1;
pub const RACE_PREF_ORC: i32 = 2;
pub const RACE_PREF_NIGHTELF: i32 = 4;
pub const RACE_PREF_UNDEAD: i32 = 8;
pub const RACE_PREF_DEMON: i32 = 16;
pub const RACE_PREF_RANDOM: i32 = 32;
pub const RACE_PREF_USER_SELECTABLE: i32 = 64;

pub const MAP_CONTROL_USER: i32 = 0;
pub const MAP_CONTROL_COMPUTER: i32 = 1;
pub const MAP_CONTROL_RESCUABLE: i32 = 2;
pub const MAP_CONTROL_NEUTRAL: i32 = 3;
pub const MAP_CONTROL_CREEP: i32 = 4;
pub const MAP_CONTROL_NONE: i32 = 5;

pub const GAME_TYPE_MELEE: i32 = 1;
pub const GAME_TYPE_FFA: i32 = 2;
pub const GAME_TYPE_USE_MAP_SETTINGS: i32 = 4;
pub const GAME_TYPE_BLIZ: i32 = 8;
pub const GAME_TYPE_ONE_ON_ONE: i32 = 16;
pub const GAME_TYPE_TWO_TEAM_PLAY: i32 = 32;
pub const GAME_TYPE_THREE_TEAM_PLAY: i32 = 64;
pub const GAME_TYPE_FOUR_TEAM_PLAY: i32 = 128;

pub const MAP_FOG_HIDE_TERRAIN: i32 = 1;
pub const MAP_FOG_MAP_EXPLORED: i32 = 2;
pub const MAP_FOG_ALWAYS_VISIBLE: i32 = 4;
pub const MAP_USE_HANDICAPS: i32 = 8;
pub const MAP_OBSERVERS: i32 = 16;
pub const MAP_OBSERVERS_ON_DEATH: i32 = 32;
pub const MAP_FIXED_COLORS: i32 = 128;
pub const MAP_LOCK_RESOURCE_TRADING: i32 = 256;
pub const MAP_RESOURCE_TRADING_ALLIES_ONLY: i32 = 512;
pub const MAP_LOCK_ALLIANCE_CHANGES: i32 = 1024;
pub const MAP_ALLIANCE_CHANGES_HIDDEN: i32 = 2048;
pub const MAP_CHEATS: i32 = 4096;
pub const MAP_CHEATS_HIDDEN: i32 = 8192;
pub const MAP_LOCK_SPEED: i32 = 8192 * 2;
pub const MAP_LOCK_RANDOM_SEED: i32 = 8192 * 4;
pub const MAP_SHARED_ADVANCED_CONTROL: i32 = 8192 * 8;
pub const MAP_RANDOM_HERO: i32 = 8192 * 16;
pub const MAP_RANDOM_RACES: i32 = 8192 * 32;
pub const MAP_RELOADED: i32 = 8192 * 64;

pub const MAP_PLACEMENT_RANDOM: i32 = 0;
pub const MAP_PLACEMENT_FIXED: i32 = 1;
pub const MAP_PLACEMENT_USE_MAP_SETTINGS: i32 = 2;
pub const MAP_PLACEMENT_TEAMS_TOGETHER: i32 = 3;
pub const MAP_LOC_PRIO_LOW: i32 = 0;
pub const MAP_LOC_PRIO_HIGH: i32 = 1;
pub const MAP_LOC_PRIO_NOT: i32 = 2;
pub const MAP_DENSITY_NONE: i32 = 0;
pub const MAP_DENSITY_LIGHT: i32 = 1;
pub const MAP_DENSITY_MEDIUM: i32 = 2;
pub const MAP_DENSITY_HEAVY: i32 = 3;
pub const MAP_DIFFICULTY_EASY: i32 = 0;
pub const MAP_DIFFICULTY_NORMAL: i32 = 1;
pub const MAP_DIFFICULTY_HARD: i32 = 2;
pub const MAP_DIFFICULTY_INSANE: i32 = 3;
pub const MAP_SPEED_SLOWEST: i32 = 0;
pub const MAP_SPEED_SLOW: i32 = 1;
pub const MAP_SPEED_NORMAL: i32 = 2;
pub const MAP_SPEED_FAST: i32 = 3;
pub const MAP_SPEED_FASTEST: i32 = 4;

pub const PLAYER_SLOT_STATE_EMPTY: i32 = 0;
pub const PLAYER_SLOT_STATE_PLAYING: i32 = 1;
pub const PLAYER_SLOT_STATE_LEFT: i32 = 2;

pub const SOUND_VOLUMEGROUP_UNITMOVEMENT: i32 = 0;
pub const SOUND_VOLUMEGROUP_UNITSOUNDS: i32 = 1;
pub const SOUND_VOLUMEGROUP_COMBAT: i32 = 2;
pub const SOUND_VOLUMEGROUP_SPELLS: i32 = 3;
pub const SOUND_VOLUMEGROUP_UI: i32 = 4;
pub const SOUND_VOLUMEGROUP_MUSIC: i32 = 5;
pub const SOUND_VOLUMEGROUP_AMBIENTSOUNDS: i32 = 6;
pub const SOUND_VOLUMEGROUP_FIRE: i32 = 7;
pub const SOUND_VOLUMEGROUP_CINEMATIC_GENERAL: i32 = 8;
pub const SOUND_VOLUMEGROUP_CINEMATIC_AMBIENT: i32 = 9;
pub const SOUND_VOLUMEGROUP_CINEMATIC_MUSIC: i32 = 10;
pub const SOUND_VOLUMEGROUP_CINEMATIC_DIALOGUE: i32 = 11;
pub const SOUND_VOLUMEGROUP_CINEMATIC_SOUND_EFFECTS_1: i32 = 12;
pub const SOUND_VOLUMEGROUP_CINEMATIC_SOUND_EFFECTS_2: i32 = 13;
pub const SOUND_VOLUMEGROUP_CINEMATIC_SOUND_EFFECTS_3: i32 = 14;

pub const GAME_STATE_DIVINE_INTERVENTION: i32 = 0;
pub const GAME_STATE_DISCONNECTED: i32 = 1;
pub const GAME_STATE_TIME_OF_DAY: i32 = 2;

pub const PLAYER_STATE_GAME_RESULT: i32 = 0;
pub const PLAYER_STATE_RESOURCE_GOLD: i32 = 1;
pub const PLAYER_STATE_RESOURCE_LUMBER: i32 = 2;
pub const PLAYER_STATE_RESOURCE_HERO_TOKENS: i32 = 3;
pub const PLAYER_STATE_RESOURCE_FOOD_CAP: i32 = 4;
pub const PLAYER_STATE_RESOURCE_FOOD_USED: i32 = 5;
pub const PLAYER_STATE_FOOD_CAP_CEILING: i32 = 6;
pub const PLAYER_STATE_GIVES_BOUNTY: i32 = 7;
pub const PLAYER_STATE_ALLIED_VICTORY: i32 = 8;
pub const PLAYER_STATE_PLACED: i32 = 9;
pub const PLAYER_STATE_OBSERVER_ON_DEATH: i32 = 10;
pub const PLAYER_STATE_OBSERVER: i32 = 11;
pub const PLAYER_STATE_UNFOLLOWABLE: i32 = 12;
pub const PLAYER_STATE_GOLD_UPKEEP_RATE: i32 = 13;
pub const PLAYER_STATE_LUMBER_UPKEEP_RATE: i32 = 14;
pub const PLAYER_STATE_GOLD_GATHERED: i32 = 15;
pub const PLAYER_STATE_LUMBER_GATHERED: i32 = 16;
pub const PLAYER_STATE_NO_CREEP_SLEEP: i32 = 25;

pub const UNIT_STATE_LIFE: i32 = 0;
pub const UNIT_STATE_MAX_LIFE: i32 = 1;
pub const UNIT_STATE_MANA: i32 = 2;
pub const UNIT_STATE_MAX_MANA: i32 = 3;

pub const AI_DIFFICULTY_NEWBIE: i32 = 0;
pub const AI_DIFFICULTY_NORMAL: i32 = 1;
pub const AI_DIFFICULTY_INSANE: i32 = 2;

pub const PLAYER_SCORE_UNITS_TRAINED: i32 = 0;
pub const PLAYER_SCORE_UNITS_KILLED: i32 = 1;
pub const PLAYER_SCORE_STRUCT_BUILT: i32 = 2;
pub const PLAYER_SCORE_STRUCT_RAZED: i32 = 3;
pub const PLAYER_SCORE_TECH_PERCENT: i32 = 4;
pub const PLAYER_SCORE_FOOD_MAXPROD: i32 = 5;
pub const PLAYER_SCORE_FOOD_MAXUSED: i32 = 6;
pub const PLAYER_SCORE_HEROES_KILLED: i32 = 7;
pub const PLAYER_SCORE_ITEMS_GAINED: i32 = 8;
pub const PLAYER_SCORE_MERCS_HIRED: i32 = 9;
pub const PLAYER_SCORE_GOLD_MINED_TOTAL: i32 = 10;
pub const PLAYER_SCORE_GOLD_MINED_UPKEEP: i32 = 11;
pub const PLAYER_SCORE_GOLD_LOST_UPKEEP: i32 = 12;
pub const PLAYER_SCORE_GOLD_LOST_TAX: i32 = 13;
pub const PLAYER_SCORE_GOLD_GIVEN: i32 = 14;
pub const PLAYER_SCORE_GOLD_RECEIVED: i32 = 15;
pub const PLAYER_SCORE_LUMBER_TOTAL: i32 = 16;
pub const PLAYER_SCORE_LUMBER_LOST_UPKEEP: i32 = 17;
pub const PLAYER_SCORE_LUMBER_LOST_TAX: i32 = 18;
pub const PLAYER_SCORE_LUMBER_GIVEN: i32 = 19;
pub const PLAYER_SCORE_LUMBER_RECEIVED: i32 = 20;
pub const PLAYER_SCORE_UNIT_TOTAL: i32 = 21;
pub const PLAYER_SCORE_HERO_TOTAL: i32 = 22;
pub const PLAYER_SCORE_RESOURCE_TOTAL: i32 = 23;
pub const PLAYER_SCORE_TOTAL: i32 = 24;

pub const EVENT_GAME_VICTORY: i32 = 0;
pub const EVENT_GAME_END_LEVEL: i32 = 1;
pub const EVENT_GAME_VARIABLE_LIMIT: i32 = 2;
pub const EVENT_GAME_STATE_LIMIT: i32 = 3;
pub const EVENT_GAME_TIMER_EXPIRED: i32 = 4;
pub const EVENT_GAME_ENTER_REGION: i32 = 5;
pub const EVENT_GAME_LEAVE_REGION: i32 = 6;
pub const EVENT_GAME_TRACKABLE_HIT: i32 = 7;
pub const EVENT_GAME_TRACKABLE_TRACK: i32 = 8;
pub const EVENT_GAME_SHOW_SKILL: i32 = 9;
pub const EVENT_GAME_BUILD_SUBMENU: i32 = 10;
pub const EVENT_PLAYER_STATE_LIMIT: i32 = 11;
pub const EVENT_PLAYER_ALLIANCE_CHANGED: i32 = 12;
pub const EVENT_PLAYER_DEFEAT: i32 = 13;
pub const EVENT_PLAYER_VICTORY: i32 = 14;
pub const EVENT_PLAYER_LEAVE: i32 = 15;
pub const EVENT_PLAYER_CHAT: i32 = 16;
pub const EVENT_PLAYER_END_CINEMATIC: i32 = 17;
pub const EVENT_PLAYER_UNIT_ATTACKED: i32 = 18;
pub const EVENT_PLAYER_UNIT_RESCUED: i32 = 19;
pub const EVENT_PLAYER_UNIT_DEATH: i32 = 20;
pub const EVENT_PLAYER_UNIT_DECAY: i32 = 21;
pub const EVENT_PLAYER_UNIT_DETECTED: i32 = 22;
pub const EVENT_PLAYER_UNIT_HIDDEN: i32 = 23;
pub const EVENT_PLAYER_UNIT_SELECTED: i32 = 24;
pub const EVENT_PLAYER_UNIT_DESELECTED: i32 = 25;
pub const EVENT_PLAYER_UNIT_CONSTRUCT_START: i32 = 26;
pub const EVENT_PLAYER_UNIT_CONSTRUCT_CANCEL: i32 = 27;
pub const EVENT_PLAYER_UNIT_CONSTRUCT_FINISH: i32 = 28;
pub const EVENT_PLAYER_UNIT_UPGRADE_START: i32 = 29;
pub const EVENT_PLAYER_UNIT_UPGRADE_CANCEL: i32 = 30;
pub const EVENT_PLAYER_UNIT_UPGRADE_FINISH: i32 = 31;
pub const EVENT_PLAYER_UNIT_TRAIN_START: i32 = 32;
pub const EVENT_PLAYER_UNIT_TRAIN_CANCEL: i32 = 33;
pub const EVENT_PLAYER_UNIT_TRAIN_FINISH: i32 = 34;
pub const EVENT_PLAYER_UNIT_RESEARCH_START: i32 = 35;
pub const EVENT_PLAYER_UNIT_RESEARCH_CANCEL: i32 = 36;
pub const EVENT_PLAYER_UNIT_RESEARCH_FINISH: i32 = 37;
pub const EVENT_PLAYER_UNIT_ISSUED_ORDER: i32 = 38;
pub const EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER: i32 = 39;
pub const EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER: i32 = 40;
pub const EVENT_PLAYER_UNIT_ISSUED_UNIT_ORDER: i32 = 40;
pub const EVENT_PLAYER_HERO_LEVEL: i32 = 41;
pub const EVENT_PLAYER_HERO_SKILL: i32 = 42;
pub const EVENT_PLAYER_HERO_REVIVABLE: i32 = 43;
pub const EVENT_PLAYER_HERO_REVIVE_START: i32 = 44;
pub const EVENT_PLAYER_HERO_REVIVE_CANCEL: i32 = 45;
pub const EVENT_PLAYER_HERO_REVIVE_FINISH: i32 = 46;
pub const EVENT_PLAYER_UNIT_SUMMON: i32 = 47;
pub const EVENT_PLAYER_UNIT_DROP_ITEM: i32 = 48;
pub const EVENT_PLAYER_UNIT_PICKUP_ITEM: i32 = 49;
pub const EVENT_PLAYER_UNIT_USE_ITEM: i32 = 50;
pub const EVENT_PLAYER_UNIT_LOADED: i32 = 51;
pub const EVENT_PLAYER_UNIT_DAMAGED: i32 = 308;
pub const EVENT_PLAYER_UNIT_DAMAGING: i32 = 315;

pub const EVENT_UNIT_DAMAGED: i32 = 52;
pub const EVENT_UNIT_DAMAGING: i32 = 314;
pub const EVENT_UNIT_DEATH: i32 = 53;
pub const EVENT_UNIT_DECAY: i32 = 54;
pub const EVENT_UNIT_DETECTED: i32 = 55;
pub const EVENT_UNIT_HIDDEN: i32 = 56;
pub const EVENT_UNIT_SELECTED: i32 = 57;
pub const EVENT_UNIT_DESELECTED: i32 = 58;
pub const EVENT_UNIT_STATE_LIMIT: i32 = 59;
pub const EVENT_UNIT_ACQUIRED_TARGET: i32 = 60;
pub const EVENT_UNIT_TARGET_IN_RANGE: i32 = 61;
pub const EVENT_UNIT_ATTACKED: i32 = 62;
pub const EVENT_UNIT_RESCUED: i32 = 63;
pub const EVENT_UNIT_CONSTRUCT_CANCEL: i32 = 64;
pub const EVENT_UNIT_CONSTRUCT_FINISH: i32 = 65;
pub const EVENT_UNIT_UPGRADE_START: i32 = 66;
pub const EVENT_UNIT_UPGRADE_CANCEL: i32 = 67;
pub const EVENT_UNIT_UPGRADE_FINISH: i32 = 68;
pub const EVENT_UNIT_TRAIN_START: i32 = 69;
pub const EVENT_UNIT_TRAIN_CANCEL: i32 = 70;
pub const EVENT_UNIT_TRAIN_FINISH: i32 = 71;
pub const EVENT_UNIT_RESEARCH_START: i32 = 72;
pub const EVENT_UNIT_RESEARCH_CANCEL: i32 = 73;
pub const EVENT_UNIT_RESEARCH_FINISH: i32 = 74;
pub const EVENT_UNIT_ISSUED_ORDER: i32 = 75;
pub const EVENT_UNIT_ISSUED_POINT_ORDER: i32 = 76;
pub const EVENT_UNIT_ISSUED_TARGET_ORDER: i32 = 77;
pub const EVENT_UNIT_HERO_LEVEL: i32 = 78;
pub const EVENT_UNIT_HERO_SKILL: i32 = 79;
pub const EVENT_UNIT_HERO_REVIVABLE: i32 = 80;
pub const EVENT_UNIT_HERO_REVIVE_START: i32 = 81;
pub const EVENT_UNIT_HERO_REVIVE_CANCEL: i32 = 82;
pub const EVENT_UNIT_HERO_REVIVE_FINISH: i32 = 83;
pub const EVENT_UNIT_SUMMON: i32 = 84;
pub const EVENT_UNIT_DROP_ITEM: i32 = 85;
pub const EVENT_UNIT_PICKUP_ITEM: i32 = 86;
pub const EVENT_UNIT_USE_ITEM: i32 = 87;
pub const EVENT_UNIT_LOADED: i32 = 88;

pub const EVENT_WIDGET_DEATH: i32 = 89;

pub const EVENT_DIALOG_BUTTON_CLICK: i32 = 90;
pub const EVENT_DIALOG_CLICK: i32 = 91;

pub const EVENT_GAME_LOADED: i32 = 256;
pub const EVENT_GAME_TOURNAMENT_FINISH_SOON: i32 = 257;
pub const EVENT_GAME_TOURNAMENT_FINISH_NOW: i32 = 258;
pub const EVENT_GAME_SAVE: i32 = 259;
pub const EVENT_GAME_CUSTOM_UI_FRAME: i32 = 310;

pub const EVENT_PLAYER_ARROW_LEFT_DOWN: i32 = 261;
pub const EVENT_PLAYER_ARROW_LEFT_UP: i32 = 262;
pub const EVENT_PLAYER_ARROW_RIGHT_DOWN: i32 = 263;
pub const EVENT_PLAYER_ARROW_RIGHT_UP: i32 = 264;
pub const EVENT_PLAYER_ARROW_DOWN_DOWN: i32 = 265;
pub const EVENT_PLAYER_ARROW_DOWN_UP: i32 = 266;
pub const EVENT_PLAYER_ARROW_UP_DOWN: i32 = 267;
pub const EVENT_PLAYER_ARROW_UP_UP: i32 = 268;
pub const EVENT_PLAYER_MOUSE_DOWN: i32 = 269;
pub const EVENT_PLAYER_MOUSE_UP: i32 = 270;
pub const EVENT_PLAYER_MOUSE_MOVE: i32 = 271;
pub const EVENT_PLAYER_SYNC_DATA: i32 = 309;
pub const EVENT_PLAYER_KEY: i32 = 311;
pub const EVENT_PLAYER_KEY_DOWN: i32 = 312;
pub const EVENT_PLAYER_KEY_UP: i32 = 313;
pub const EVENT_PLAYER_UNIT_SELL: i32 = 272;
pub const EVENT_PLAYER_UNIT_CHANGE_OWNER: i32 = 273;
pub const EVENT_PLAYER_UNIT_SELL_ITEM: i32 = 274;
pub const EVENT_PLAYER_UNIT_SPELL_CHANNEL: i32 = 275;
pub const EVENT_PLAYER_UNIT_SPELL_CAST: i32 = 276;
pub const EVENT_PLAYER_UNIT_SPELL_EFFECT: i32 = 277;
pub const EVENT_PLAYER_UNIT_SPELL_FINISH: i32 = 278;
pub const EVENT_PLAYER_UNIT_SPELL_ENDCAST: i32 = 279;
pub const EVENT_PLAYER_UNIT_PAWN_ITEM: i32 = 280;
pub const EVENT_PLAYER_UNIT_STACK_ITEM: i32 = 319;

pub const EVENT_UNIT_SELL: i32 = 289;
pub const EVENT_UNIT_CHANGE_OWNER: i32 = 290;
pub const EVENT_UNIT_SELL_ITEM: i32 = 291;
pub const EVENT_UNIT_SPELL_CHANNEL: i32 = 292;
pub const EVENT_UNIT_SPELL_CAST: i32 = 293;
pub const EVENT_UNIT_SPELL_EFFECT: i32 = 294;
pub const EVENT_UNIT_SPELL_FINISH: i32 = 295;
pub const EVENT_UNIT_SPELL_ENDCAST: i32 = 296;
pub const EVENT_UNIT_PAWN_ITEM: i32 = 297;
pub const EVENT_UNIT_STACK_ITEM: i32 = 318;

pub const LESS_THAN: i32 = 0;
pub const LESS_THAN_OR_EQUAL: i32 = 1;
pub const EQUAL: i32 = 2;
pub const GREATER_THAN_OR_EQUAL: i32 = 3;
pub const GREATER_THAN: i32 = 4;
pub const NOT_EQUAL: i32 = 5;

pub const UNIT_TYPE_HERO: i32 = 0;
pub const UNIT_TYPE_DEAD: i32 = 1;
pub const UNIT_TYPE_STRUCTURE: i32 = 2;
pub const UNIT_TYPE_FLYING: i32 = 3;
pub const UNIT_TYPE_GROUND: i32 = 4;
pub const UNIT_TYPE_ATTACKS_FLYING: i32 = 5;
pub const UNIT_TYPE_ATTACKS_GROUND: i32 = 6;
pub const UNIT_TYPE_MELEE_ATTACKER: i32 = 7;
pub const UNIT_TYPE_RANGED_ATTACKER: i32 = 8;
pub const UNIT_TYPE_GIANT: i32 = 9;
pub const UNIT_TYPE_SUMMONED: i32 = 10;
pub const UNIT_TYPE_STUNNED: i32 = 11;
pub const UNIT_TYPE_PLAGUED: i32 = 12;
pub const UNIT_TYPE_SNARED: i32 = 13;
pub const UNIT_TYPE_UNDEAD: i32 = 14;
pub const UNIT_TYPE_MECHANICAL: i32 = 15;
pub const UNIT_TYPE_PEON: i32 = 16;
pub const UNIT_TYPE_SAPPER: i32 = 17;
pub const UNIT_TYPE_TOWNHALL: i32 = 18;
pub const UNIT_TYPE_ANCIENT: i32 = 19;
pub const UNIT_TYPE_TAUREN: i32 = 20;
pub const UNIT_TYPE_POISONED: i32 = 21;
pub const UNIT_TYPE_POLYMORPHED: i32 = 22;
pub const UNIT_TYPE_SLEEPING: i32 = 23;
pub const UNIT_TYPE_RESISTANT: i32 = 24;
pub const UNIT_TYPE_ETHEREAL: i32 = 25;
pub const UNIT_TYPE_MAGIC_IMMUNE: i32 = 26;

pub const ITEM_TYPE_PERMANENT: i32 = 0;
pub const ITEM_TYPE_CHARGED: i32 = 1;
pub const ITEM_TYPE_POWERUP: i32 = 2;
pub const ITEM_TYPE_ARTIFACT: i32 = 3;
pub const ITEM_TYPE_PURCHASABLE: i32 = 4;
pub const ITEM_TYPE_CAMPAIGN: i32 = 5;
pub const ITEM_TYPE_MISCELLANEOUS: i32 = 6;
pub const ITEM_TYPE_UNKNOWN: i32 = 7;
pub const ITEM_TYPE_ANY: i32 = 8;
pub const ITEM_TYPE_TOME: i32 = 2;

pub const CAMERA_FIELD_TARGET_DISTANCE: i32 = 0;
pub const CAMERA_FIELD_FARZ: i32 = 1;
pub const CAMERA_FIELD_ANGLE_OF_ATTACK: i32 = 2;
pub const CAMERA_FIELD_FIELD_OF_VIEW: i32 = 3;
pub const CAMERA_FIELD_ROLL: i32 = 4;
pub const CAMERA_FIELD_ROTATION: i32 = 5;
pub const CAMERA_FIELD_ZOFFSET: i32 = 6;
pub const CAMERA_FIELD_NEARZ: i32 = 7;
pub const CAMERA_FIELD_LOCAL_PITCH: i32 = 8;
pub const CAMERA_FIELD_LOCAL_YAW: i32 = 9;
pub const CAMERA_FIELD_LOCAL_ROLL: i32 = 10;

pub const BLEND_MODE_NONE: i32 = 0;
pub const BLEND_MODE_DONT_CARE: i32 = 0;
pub const BLEND_MODE_KEYALPHA: i32 = 1;
pub const BLEND_MODE_BLEND: i32 = 2;
pub const BLEND_MODE_ADDITIVE: i32 = 3;
pub const BLEND_MODE_MODULATE: i32 = 4;
pub const BLEND_MODE_MODULATE_2X: i32 = 5;

pub const RARITY_FREQUENT: i32 = 0;
pub const RARITY_RARE: i32 = 1;

pub const TEXMAP_FLAG_NONE: i32 = 0;
pub const TEXMAP_FLAG_WRAP_U: i32 = 1;
pub const TEXMAP_FLAG_WRAP_V: i32 = 2;
pub const TEXMAP_FLAG_WRAP_UV: i32 = 3;

pub const FOG_OF_WAR_MASKED: i32 = 1;
pub const FOG_OF_WAR_FOGGED: i32 = 2;
pub const FOG_OF_WAR_VISIBLE: i32 = 4;

pub const EFFECT_TYPE_EFFECT: i32 = 0;
pub const EFFECT_TYPE_TARGET: i32 = 1;
pub const EFFECT_TYPE_CASTER: i32 = 2;
pub const EFFECT_TYPE_SPECIAL: i32 = 3;
pub const EFFECT_TYPE_AREA_EFFECT: i32 = 4;
pub const EFFECT_TYPE_MISSILE: i32 = 5;
pub const EFFECT_TYPE_LIGHTNING: i32 = 6;

pub const SOUND_TYPE_EFFECT: i32 = 0;
pub const SOUND_TYPE_EFFECT_LOOPED: i32 = 1;

pub const ORIGIN_FRAME_GAME_UI: i32 = 0;
pub const ORIGIN_FRAME_COMMAND_BUTTON: i32 = 1;
pub const ORIGIN_FRAME_HERO_BAR: i32 = 2;
pub const ORIGIN_FRAME_HERO_BUTTON: i32 = 3;
pub const ORIGIN_FRAME_HERO_HP_BAR: i32 = 4;
pub const ORIGIN_FRAME_HERO_MANA_BAR: i32 = 5;
pub const ORIGIN_FRAME_HERO_BUTTON_INDICATOR: i32 = 6;
pub const ORIGIN_FRAME_ITEM_BUTTON: i32 = 7;
pub const ORIGIN_FRAME_MINIMAP: i32 = 8;
pub const ORIGIN_FRAME_MINIMAP_BUTTON: i32 = 9;
pub const ORIGIN_FRAME_SYSTEM_BUTTON: i32 = 10;
pub const ORIGIN_FRAME_TOOLTIP: i32 = 11;
pub const ORIGIN_FRAME_UBERTOOLTIP: i32 = 12;
pub const ORIGIN_FRAME_CHAT_MSG: i32 = 13;
pub const ORIGIN_FRAME_UNIT_MSG: i32 = 14;
pub const ORIGIN_FRAME_TOP_MSG: i32 = 15;
pub const ORIGIN_FRAME_PORTRAIT: i32 = 16;
pub const ORIGIN_FRAME_WORLD_FRAME: i32 = 17;
pub const ORIGIN_FRAME_SIMPLE_UI_PARENT: i32 = 18;
pub const ORIGIN_FRAME_PORTRAIT_HP_TEXT: i32 = 19;
pub const ORIGIN_FRAME_PORTRAIT_MANA_TEXT: i32 = 20;
pub const ORIGIN_FRAME_UNIT_PANEL_BUFF_BAR: i32 = 21;
pub const ORIGIN_FRAME_UNIT_PANEL_BUFF_BAR_LABEL: i32 = 22;

pub const FRAMEPOINT_TOPLEFT: i32 = 0;
pub const FRAMEPOINT_TOP: i32 = 1;
pub const FRAMEPOINT_TOPRIGHT: i32 = 2;
pub const FRAMEPOINT_LEFT: i32 = 3;
pub const FRAMEPOINT_CENTER: i32 = 4;
pub const FRAMEPOINT_RIGHT: i32 = 5;
pub const FRAMEPOINT_BOTTOMLEFT: i32 = 6;
pub const FRAMEPOINT_BOTTOM: i32 = 7;
pub const FRAMEPOINT_BOTTOMRIGHT: i32 = 8;

pub const TEXT_JUSTIFY_TOP: i32 = 0;
pub const TEXT_JUSTIFY_MIDDLE: i32 = 1;
pub const TEXT_JUSTIFY_BOTTOM: i32 = 2;
pub const TEXT_JUSTIFY_LEFT: i32 = 3;
pub const TEXT_JUSTIFY_CENTER: i32 = 4;
pub const TEXT_JUSTIFY_RIGHT: i32 = 5;

pub const FRAMEEVENT_CONTROL_CLICK: i32 = 1;
pub const FRAMEEVENT_MOUSE_ENTER: i32 = 2;
pub const FRAMEEVENT_MOUSE_LEAVE: i32 = 3;
pub const FRAMEEVENT_MOUSE_UP: i32 = 4;
pub const FRAMEEVENT_MOUSE_DOWN: i32 = 5;
pub const FRAMEEVENT_MOUSE_WHEEL: i32 = 6;
pub const FRAMEEVENT_CHECKBOX_CHECKED: i32 = 7;
pub const FRAMEEVENT_CHECKBOX_UNCHECKED: i32 = 8;
pub const FRAMEEVENT_EDITBOX_TEXT_CHANGED: i32 = 9;
pub const FRAMEEVENT_POPUPMENU_ITEM_CHANGED: i32 = 10;
pub const FRAMEEVENT_MOUSE_DOUBLECLICK: i32 = 11;
pub const FRAMEEVENT_SPRITE_ANIM_UPDATE: i32 = 12;
pub const FRAMEEVENT_SLIDER_VALUE_CHANGED: i32 = 13;
pub const FRAMEEVENT_DIALOG_CANCEL: i32 = 14;
pub const FRAMEEVENT_DIALOG_ACCEPT: i32 = 15;
pub const FRAMEEVENT_EDITBOX_ENTER: i32 = 16;

pub const OSKEY_BACKSPACE: i32 = 0x08;
pub const OSKEY_TAB: i32 = 0x09;
pub const OSKEY_CLEAR: i32 = 0x0C;
pub const OSKEY_RETURN: i32 = 0x0D;
pub const OSKEY_SHIFT: i32 = 0x10;
pub const OSKEY_CONTROL: i32 = 0x11;
pub const OSKEY_ALT: i32 = 0x12;
pub const OSKEY_PAUSE: i32 = 0x13;
pub const OSKEY_CAPSLOCK: i32 = 0x14;
pub const OSKEY_KANA: i32 = 0x15;
pub const OSKEY_HANGUL: i32 = 0x15;
pub const OSKEY_JUNJA: i32 = 0x17;
pub const OSKEY_FINAL: i32 = 0x18;
pub const OSKEY_HANJA: i32 = 0x19;
pub const OSKEY_KANJI: i32 = 0x19;
pub const OSKEY_ESCAPE: i32 = 0x1B;
pub const OSKEY_CONVERT: i32 = 0x1C;
pub const OSKEY_NONCONVERT: i32 = 0x1D;
pub const OSKEY_ACCEPT: i32 = 0x1E;
pub const OSKEY_MODECHANGE: i32 = 0x1F;
pub const OSKEY_SPACE: i32 = 0x20;
pub const OSKEY_PAGEUP: i32 = 0x21;
pub const OSKEY_PAGEDOWN: i32 = 0x22;
pub const OSKEY_END: i32 = 0x23;
pub const OSKEY_HOME: i32 = 0x24;
pub const OSKEY_LEFT: i32 = 0x25;
pub const OSKEY_UP: i32 = 0x26;
pub const OSKEY_RIGHT: i32 = 0x27;
pub const OSKEY_DOWN: i32 = 0x28;
pub const OSKEY_SELECT: i32 = 0x29;
pub const OSKEY_PRINT: i32 = 0x2A;
pub const OSKEY_EXECUTE: i32 = 0x2B;
pub const OSKEY_PRINTSCREEN: i32 = 0x2C;
pub const OSKEY_INSERT: i32 = 0x2D;
pub const OSKEY_DELETE: i32 = 0x2E;
pub const OSKEY_HELP: i32 = 0x2F;
pub const OSKEY_0: i32 = 0x30;
pub const OSKEY_1: i32 = 0x31;
pub const OSKEY_2: i32 = 0x32;
pub const OSKEY_3: i32 = 0x33;
pub const OSKEY_4: i32 = 0x34;
pub const OSKEY_5: i32 = 0x35;
pub const OSKEY_6: i32 = 0x36;
pub const OSKEY_7: i32 = 0x37;
pub const OSKEY_8: i32 = 0x38;
pub const OSKEY_9: i32 = 0x39;
pub const OSKEY_A: i32 = 0x41;
pub const OSKEY_B: i32 = 0x42;
pub const OSKEY_C: i32 = 0x43;
pub const OSKEY_D: i32 = 0x44;
pub const OSKEY_E: i32 = 0x45;
pub const OSKEY_F: i32 = 0x46;
pub const OSKEY_G: i32 = 0x47;
pub const OSKEY_H: i32 = 0x48;
pub const OSKEY_I: i32 = 0x49;
pub const OSKEY_J: i32 = 0x4A;
pub const OSKEY_K: i32 = 0x4B;
pub const OSKEY_L: i32 = 0x4C;
pub const OSKEY_M: i32 = 0x4D;
pub const OSKEY_N: i32 = 0x4E;
pub const OSKEY_O: i32 = 0x4F;
pub const OSKEY_P: i32 = 0x50;
pub const OSKEY_Q: i32 = 0x51;
pub const OSKEY_R: i32 = 0x52;
pub const OSKEY_S: i32 = 0x53;
pub const OSKEY_T: i32 = 0x54;
pub const OSKEY_U: i32 = 0x55;
pub const OSKEY_V: i32 = 0x56;
pub const OSKEY_W: i32 = 0x57;
pub const OSKEY_X: i32 = 0x58;
pub const OSKEY_Y: i32 = 0x59;
pub const OSKEY_Z: i32 = 0x5A;
pub const OSKEY_LMETA: i32 = 0x5B;
pub const OSKEY_RMETA: i32 = 0x5C;
pub const OSKEY_APPS: i32 = 0x5D;
pub const OSKEY_SLEEP: i32 = 0x5F;
pub const OSKEY_NUMPAD0: i32 = 0x60;
pub const OSKEY_NUMPAD1: i32 = 0x61;
pub const OSKEY_NUMPAD2: i32 = 0x62;
pub const OSKEY_NUMPAD3: i32 = 0x63;
pub const OSKEY_NUMPAD4: i32 = 0x64;
pub const OSKEY_NUMPAD5: i32 = 0x65;
pub const OSKEY_NUMPAD6: i32 = 0x66;
pub const OSKEY_NUMPAD7: i32 = 0x67;
pub const OSKEY_NUMPAD8: i32 = 0x68;
pub const OSKEY_NUMPAD9: i32 = 0x69;
pub const OSKEY_MULTIPLY: i32 = 0x6A;
pub const OSKEY_ADD: i32 = 0x6B;
pub const OSKEY_SEPARATOR: i32 = 0x6C;
pub const OSKEY_SUBTRACT: i32 = 0x6D;
pub const OSKEY_DECIMAL: i32 = 0x6E;
pub const OSKEY_DIVIDE: i32 = 0x6F;
pub const OSKEY_F1: i32 = 0x70;
pub const OSKEY_F2: i32 = 0x71;
pub const OSKEY_F3: i32 = 0x72;
pub const OSKEY_F4: i32 = 0x73;
pub const OSKEY_F5: i32 = 0x74;
pub const OSKEY_F6: i32 = 0x75;
pub const OSKEY_F7: i32 = 0x76;
pub const OSKEY_F8: i32 = 0x77;
pub const OSKEY_F9: i32 = 0x78;
pub const OSKEY_F10: i32 = 0x79;
pub const OSKEY_F11: i32 = 0x7A;
pub const OSKEY_F12: i32 = 0x7B;
pub const OSKEY_F13: i32 = 0x7C;
pub const OSKEY_F14: i32 = 0x7D;
pub const OSKEY_F15: i32 = 0x7E;
pub const OSKEY_F16: i32 = 0x7F;
pub const OSKEY_F17: i32 = 0x80;
pub const OSKEY_F18: i32 = 0x81;
pub const OSKEY_F19: i32 = 0x82;
pub const OSKEY_F20: i32 = 0x83;
pub const OSKEY_F21: i32 = 0x84;
pub const OSKEY_F22: i32 = 0x85;
pub const OSKEY_F23: i32 = 0x86;
pub const OSKEY_F24: i32 = 0x87;
pub const OSKEY_NUMLOCK: i32 = 0x90;
pub const OSKEY_SCROLLLOCK: i32 = 0x91;
pub const OSKEY_OEM_NEC_EQUAL: i32 = 0x92;
pub const OSKEY_OEM_FJ_JISHO: i32 = 0x92;
pub const OSKEY_OEM_FJ_MASSHOU: i32 = 0x93;
pub const OSKEY_OEM_FJ_TOUROKU: i32 = 0x94;
pub const OSKEY_OEM_FJ_LOYA: i32 = 0x95;
pub const OSKEY_OEM_FJ_ROYA: i32 = 0x96;
pub const OSKEY_LSHIFT: i32 = 0xA0;
pub const OSKEY_RSHIFT: i32 = 0xA1;
pub const OSKEY_LCONTROL: i32 = 0xA2;
pub const OSKEY_RCONTROL: i32 = 0xA3;
pub const OSKEY_LALT: i32 = 0xA4;
pub const OSKEY_RALT: i32 = 0xA5;
pub const OSKEY_BROWSER_BACK: i32 = 0xA6;
pub const OSKEY_BROWSER_FORWARD: i32 = 0xA7;
pub const OSKEY_BROWSER_REFRESH: i32 = 0xA8;
pub const OSKEY_BROWSER_STOP: i32 = 0xA9;
pub const OSKEY_BROWSER_SEARCH: i32 = 0xAA;
pub const OSKEY_BROWSER_FAVORITES: i32 = 0xAB;
pub const OSKEY_BROWSER_HOME: i32 = 0xAC;
pub const OSKEY_VOLUME_MUTE: i32 = 0xAD;
pub const OSKEY_VOLUME_DOWN: i32 = 0xAE;
pub const OSKEY_VOLUME_UP: i32 = 0xAF;
pub const OSKEY_MEDIA_NEXT_TRACK: i32 = 0xB0;
pub const OSKEY_MEDIA_PREV_TRACK: i32 = 0xB1;
pub const OSKEY_MEDIA_STOP: i32 = 0xB2;
pub const OSKEY_MEDIA_PLAY_PAUSE: i32 = 0xB3;
pub const OSKEY_LAUNCH_MAIL: i32 = 0xB4;
pub const OSKEY_LAUNCH_MEDIA_SELECT: i32 = 0xB5;
pub const OSKEY_LAUNCH_APP1: i32 = 0xB6;
pub const OSKEY_LAUNCH_APP2: i32 = 0xB7;
pub const OSKEY_OEM_1: i32 = 0xBA;
pub const OSKEY_OEM_PLUS: i32 = 0xBB;
pub const OSKEY_OEM_COMMA: i32 = 0xBC;
pub const OSKEY_OEM_MINUS: i32 = 0xBD;
pub const OSKEY_OEM_PERIOD: i32 = 0xBE;
pub const OSKEY_OEM_2: i32 = 0xBF;
pub const OSKEY_OEM_3: i32 = 0xC0;
pub const OSKEY_OEM_4: i32 = 0xDB;
pub const OSKEY_OEM_5: i32 = 0xDC;
pub const OSKEY_OEM_6: i32 = 0xDD;
pub const OSKEY_OEM_7: i32 = 0xDE;
pub const OSKEY_OEM_8: i32 = 0xDF;
pub const OSKEY_OEM_AX: i32 = 0xE1;
pub const OSKEY_OEM_102: i32 = 0xE2;
pub const OSKEY_ICO_HELP: i32 = 0xE3;
pub const OSKEY_ICO_00: i32 = 0xE4;
pub const OSKEY_PROCESSKEY: i32 = 0xE5;
pub const OSKEY_ICO_CLEAR: i32 = 0xE6;
pub const OSKEY_PACKET: i32 = 0xE7;
pub const OSKEY_OEM_RESET: i32 = 0xE9;
pub const OSKEY_OEM_JUMP: i32 = 0xEA;
pub const OSKEY_OEM_PA1: i32 = 0xEB;
pub const OSKEY_OEM_PA2: i32 = 0xEC;
pub const OSKEY_OEM_PA3: i32 = 0xED;
pub const OSKEY_OEM_WSCTRL: i32 = 0xEE;
pub const OSKEY_OEM_CUSEL: i32 = 0xEF;
pub const OSKEY_OEM_ATTN: i32 = 0xF0;
pub const OSKEY_OEM_FINISH: i32 = 0xF1;
pub const OSKEY_OEM_COPY: i32 = 0xF2;
pub const OSKEY_OEM_AUTO: i32 = 0xF3;
pub const OSKEY_OEM_ENLW: i32 = 0xF4;
pub const OSKEY_OEM_BACKTAB: i32 = 0xF5;
pub const OSKEY_ATTN: i32 = 0xF6;
pub const OSKEY_CRSEL: i32 = 0xF7;
pub const OSKEY_EXSEL: i32 = 0xF8;
pub const OSKEY_EREOF: i32 = 0xF9;
pub const OSKEY_PLAY: i32 = 0xFA;
pub const OSKEY_ZOOM: i32 = 0xFB;
pub const OSKEY_NONAME: i32 = 0xFC;
pub const OSKEY_PA1: i32 = 0xFD;
pub const OSKEY_OEM_CLEAR: i32 = 0xFE;

pub const ABILITY_IF_BUTTON_POSITION_NORMAL_X: i32 = cc!("abpx");
pub const ABILITY_IF_BUTTON_POSITION_NORMAL_Y: i32 = cc!("abpy");
pub const ABILITY_IF_BUTTON_POSITION_ACTIVATED_X: i32 = cc!("aubx");
pub const ABILITY_IF_BUTTON_POSITION_ACTIVATED_Y: i32 = cc!("auby");
pub const ABILITY_IF_BUTTON_POSITION_RESEARCH_X: i32 = cc!("arpx");
pub const ABILITY_IF_BUTTON_POSITION_RESEARCH_Y: i32 = cc!("arpy");
pub const ABILITY_IF_MISSILE_SPEED: i32 = cc!("amsp");
pub const ABILITY_IF_TARGET_ATTACHMENTS: i32 = cc!("atac");
pub const ABILITY_IF_CASTER_ATTACHMENTS: i32 = cc!("acac");
pub const ABILITY_IF_PRIORITY: i32 = cc!("apri");
pub const ABILITY_IF_LEVELS: i32 = cc!("alev");
pub const ABILITY_IF_REQUIRED_LEVEL: i32 = cc!("arlv");
pub const ABILITY_IF_LEVEL_SKIP_REQUIREMENT: i32 = cc!("alsk");
pub const ABILITY_BF_HERO_ABILITY: i32 = cc!("aher");
pub const ABILITY_BF_ITEM_ABILITY: i32 = cc!("aite");
pub const ABILITY_BF_CHECK_DEPENDENCIES: i32 = cc!("achd");
pub const ABILITY_RF_ARF_MISSILE_ARC: i32 = cc!("amac");
pub const ABILITY_SF_NAME: i32 = cc!("anam");
pub const ABILITY_SF_ICON_ACTIVATED: i32 = cc!("auar");
pub const ABILITY_SF_ICON_RESEARCH: i32 = cc!("arar");
pub const ABILITY_SF_EFFECT_SOUND: i32 = cc!("aefs");
pub const ABILITY_SF_EFFECT_SOUND_LOOPING: i32 = cc!("aefl");
pub const ABILITY_ILF_MANA_COST: i32 = cc!("amcs");
pub const ABILITY_ILF_NUMBER_OF_WAVES: i32 = cc!("Hbz1");
pub const ABILITY_ILF_NUMBER_OF_SHARDS: i32 = cc!("Hbz3");
pub const ABILITY_ILF_NUMBER_OF_UNITS_TELEPORTED: i32 = cc!("Hmt1");
pub const ABILITY_ILF_SUMMONED_UNIT_COUNT_HWE2: i32 = cc!("Hwe2");
pub const ABILITY_ILF_NUMBER_OF_IMAGES: i32 = cc!("Omi1");
pub const ABILITY_ILF_NUMBER_OF_CORPSES_RAISED_UAN1: i32 = cc!("Uan1");
pub const ABILITY_ILF_MORPHING_FLAGS: i32 = cc!("Eme2");
pub const ABILITY_ILF_STRENGTH_BONUS_NRG5: i32 = cc!("Nrg5");
pub const ABILITY_ILF_DEFENSE_BONUS_NRG6: i32 = cc!("Nrg6");
pub const ABILITY_ILF_NUMBER_OF_TARGETS_HIT: i32 = cc!("Ocl2");
pub const ABILITY_ILF_DETECTION_TYPE_OFS1: i32 = cc!("Ofs1");
pub const ABILITY_ILF_NUMBER_OF_SUMMONED_UNITS_OSF2: i32 = cc!("Osf2");
pub const ABILITY_ILF_NUMBER_OF_SUMMONED_UNITS_EFN1: i32 = cc!("Efn1");
pub const ABILITY_ILF_NUMBER_OF_CORPSES_RAISED_HRE1: i32 = cc!("Hre1");
pub const ABILITY_ILF_STACK_FLAGS: i32 = cc!("Hca4");
pub const ABILITY_ILF_MINIMUM_NUMBER_OF_UNITS: i32 = cc!("Ndp2");
pub const ABILITY_ILF_MAXIMUM_NUMBER_OF_UNITS_NDP3: i32 = cc!("Ndp3");
pub const ABILITY_ILF_NUMBER_OF_UNITS_CREATED_NRC2: i32 = cc!("Nrc2");
pub const ABILITY_ILF_SHIELD_LIFE: i32 = cc!("Ams3");
pub const ABILITY_ILF_MANA_LOSS_AMS4: i32 = cc!("Ams4");
pub const ABILITY_ILF_GOLD_PER_INTERVAL_BGM1: i32 = cc!("Bgm1");
pub const ABILITY_ILF_MAX_NUMBER_OF_MINERS: i32 = cc!("Bgm3");
pub const ABILITY_ILF_CARGO_CAPACITY: i32 = cc!("Car1");
pub const ABILITY_ILF_MAXIMUM_CREEP_LEVEL_DEV3: i32 = cc!("Dev3");
pub const ABILITY_ILF_MAX_CREEP_LEVEL_DEV1: i32 = cc!("Dev1");
pub const ABILITY_ILF_GOLD_PER_INTERVAL_EGM1: i32 = cc!("Egm1");
pub const ABILITY_ILF_DEFENSE_REDUCTION: i32 = cc!("Fae1");
pub const ABILITY_ILF_DETECTION_TYPE_FLA1: i32 = cc!("Fla1");
pub const ABILITY_ILF_FLARE_COUNT: i32 = cc!("Fla3");
pub const ABILITY_ILF_MAX_GOLD: i32 = cc!("Gld1");
pub const ABILITY_ILF_MINING_CAPACITY: i32 = cc!("Gld3");
pub const ABILITY_ILF_MAXIMUM_NUMBER_OF_CORPSES_GYD1: i32 = cc!("Gyd1");
pub const ABILITY_ILF_DAMAGE_TO_TREE: i32 = cc!("Har1");
pub const ABILITY_ILF_LUMBER_CAPACITY: i32 = cc!("Har2");
pub const ABILITY_ILF_GOLD_CAPACITY: i32 = cc!("Har3");
pub const ABILITY_ILF_DEFENSE_INCREASE_INF2: i32 = cc!("Inf2");
pub const ABILITY_ILF_INTERACTION_TYPE: i32 = cc!("Neu2");
pub const ABILITY_ILF_GOLD_COST_NDT1: i32 = cc!("Ndt1");
pub const ABILITY_ILF_LUMBER_COST_NDT2: i32 = cc!("Ndt2");
pub const ABILITY_ILF_DETECTION_TYPE_NDT3: i32 = cc!("Ndt3");
pub const ABILITY_ILF_STACKING_TYPE_POI4: i32 = cc!("Poi4");
pub const ABILITY_ILF_STACKING_TYPE_POA5: i32 = cc!("Poa5");
pub const ABILITY_ILF_MAXIMUM_CREEP_LEVEL_PLY1: i32 = cc!("Ply1");
pub const ABILITY_ILF_MAXIMUM_CREEP_LEVEL_POS1: i32 = cc!("Pos1");
pub const ABILITY_ILF_MOVEMENT_UPDATE_FREQUENCY_PRG1: i32 = cc!("Prg1");
pub const ABILITY_ILF_ATTACK_UPDATE_FREQUENCY_PRG2: i32 = cc!("Prg2");
pub const ABILITY_ILF_MANA_LOSS_PRG6: i32 = cc!("Prg6");
pub const ABILITY_ILF_UNITS_SUMMONED_TYPE_ONE: i32 = cc!("Rai1");
pub const ABILITY_ILF_UNITS_SUMMONED_TYPE_TWO: i32 = cc!("Rai2");
pub const ABILITY_ILF_MAX_UNITS_SUMMONED: i32 = cc!("Ucb5");
pub const ABILITY_ILF_ALLOW_WHEN_FULL_REJ3: i32 = cc!("Rej3");
pub const ABILITY_ILF_MAXIMUM_UNITS_CHARGED_TO_CASTER: i32 = cc!("Rpb5");
pub const ABILITY_ILF_MAXIMUM_UNITS_AFFECTED: i32 = cc!("Rpb6");
pub const ABILITY_ILF_DEFENSE_INCREASE_ROA2: i32 = cc!("Roa2");
pub const ABILITY_ILF_MAX_UNITS_ROA7: i32 = cc!("Roa7");
pub const ABILITY_ILF_ROOTED_WEAPONS: i32 = cc!("Roo1");
pub const ABILITY_ILF_UPROOTED_WEAPONS: i32 = cc!("Roo2");
pub const ABILITY_ILF_UPROOTED_DEFENSE_TYPE: i32 = cc!("Roo4");
pub const ABILITY_ILF_ACCUMULATION_STEP: i32 = cc!("Sal2");
pub const ABILITY_ILF_NUMBER_OF_OWLS: i32 = cc!("Esn4");
pub const ABILITY_ILF_STACKING_TYPE_SPO4: i32 = cc!("Spo4");
pub const ABILITY_ILF_NUMBER_OF_UNITS: i32 = cc!("Sod1");
pub const ABILITY_ILF_SPIDER_CAPACITY: i32 = cc!("Spa1");
pub const ABILITY_ILF_INTERVALS_BEFORE_CHANGING_TREES: i32 = cc!("Wha2");
pub const ABILITY_ILF_AGILITY_BONUS: i32 = cc!("Iagi");
pub const ABILITY_ILF_INTELLIGENCE_BONUS: i32 = cc!("Iint");
pub const ABILITY_ILF_STRENGTH_BONUS_ISTR: i32 = cc!("Istr");
pub const ABILITY_ILF_ATTACK_BONUS: i32 = cc!("Iatt");
pub const ABILITY_ILF_DEFENSE_BONUS_IDEF: i32 = cc!("Idef");
pub const ABILITY_ILF_SUMMON_1_AMOUNT: i32 = cc!("Isn1");
pub const ABILITY_ILF_SUMMON_2_AMOUNT: i32 = cc!("Isn2");
pub const ABILITY_ILF_EXPERIENCE_GAINED: i32 = cc!("Ixpg");
pub const ABILITY_ILF_HIT_POINTS_GAINED_IHPG: i32 = cc!("Ihpg");
pub const ABILITY_ILF_MANA_POINTS_GAINED_IMPG: i32 = cc!("Impg");
pub const ABILITY_ILF_HIT_POINTS_GAINED_IHP2: i32 = cc!("Ihp2");
pub const ABILITY_ILF_MANA_POINTS_GAINED_IMP2: i32 = cc!("Imp2");
pub const ABILITY_ILF_DAMAGE_BONUS_DICE: i32 = cc!("Idic");
pub const ABILITY_ILF_ARMOR_PENALTY_IARP: i32 = cc!("Iarp");
pub const ABILITY_ILF_ENABLED_ATTACK_INDEX_IOB5: i32 = cc!("Iob5");
pub const ABILITY_ILF_LEVELS_GAINED: i32 = cc!("Ilev");
pub const ABILITY_ILF_MAX_LIFE_GAINED: i32 = cc!("Ilif");
pub const ABILITY_ILF_MAX_MANA_GAINED: i32 = cc!("Iman");
pub const ABILITY_ILF_GOLD_GIVEN: i32 = cc!("Igol");
pub const ABILITY_ILF_LUMBER_GIVEN: i32 = cc!("Ilum");
pub const ABILITY_ILF_DETECTION_TYPE_IFA1: i32 = cc!("Ifa1");
pub const ABILITY_ILF_MAXIMUM_CREEP_LEVEL_ICRE: i32 = cc!("Icre");
pub const ABILITY_ILF_MOVEMENT_SPEED_BONUS: i32 = cc!("Imvb");
pub const ABILITY_ILF_HIT_POINTS_REGENERATED_PER_SECOND: i32 = cc!("Ihpr");
pub const ABILITY_ILF_SIGHT_RANGE_BONUS: i32 = cc!("Isib");
pub const ABILITY_ILF_DAMAGE_PER_DURATION: i32 = cc!("Icfd");
pub const ABILITY_ILF_MANA_USED_PER_SECOND: i32 = cc!("Icfm");
pub const ABILITY_ILF_EXTRA_MANA_REQUIRED: i32 = cc!("Icfx");
pub const ABILITY_ILF_DETECTION_RADIUS_IDET: i32 = cc!("Idet");
pub const ABILITY_ILF_MANA_LOSS_PER_UNIT_IDIM: i32 = cc!("Idim");
pub const ABILITY_ILF_DAMAGE_TO_SUMMONED_UNITS_IDID: i32 = cc!("Idid");
pub const ABILITY_ILF_MAXIMUM_NUMBER_OF_UNITS_IREC: i32 = cc!("Irec");
pub const ABILITY_ILF_DELAY_AFTER_DEATH_SECONDS: i32 = cc!("Ircd");
pub const ABILITY_ILF_RESTORED_LIFE: i32 = cc!("irc2");
pub const ABILITY_ILF_RESTORED_MANA_1_FOR_CURRENT: i32 = cc!("irc3");
pub const ABILITY_ILF_HIT_POINTS_RESTORED: i32 = cc!("Ihps");
pub const ABILITY_ILF_MANA_POINTS_RESTORED: i32 = cc!("Imps");
pub const ABILITY_ILF_MAXIMUM_NUMBER_OF_UNITS_ITPM: i32 = cc!("Itpm");
pub const ABILITY_ILF_NUMBER_OF_CORPSES_RAISED_CAD1: i32 = cc!("Cad1");
pub const ABILITY_ILF_TERRAIN_DEFORMATION_DURATION_MS: i32 = cc!("Wrs3");
pub const ABILITY_ILF_MAXIMUM_UNITS: i32 = cc!("Uds1");
pub const ABILITY_ILF_DETECTION_TYPE_DET1: i32 = cc!("Det1");
pub const ABILITY_ILF_GOLD_COST_PER_STRUCTURE: i32 = cc!("Nsp1");
pub const ABILITY_ILF_LUMBER_COST_PER_USE: i32 = cc!("Nsp2");
pub const ABILITY_ILF_DETECTION_TYPE_NSP3: i32 = cc!("Nsp3");
pub const ABILITY_ILF_NUMBER_OF_SWARM_UNITS: i32 = cc!("Uls1");
pub const ABILITY_ILF_MAX_SWARM_UNITS_PER_TARGET: i32 = cc!("Uls3");
pub const ABILITY_ILF_NUMBER_OF_SUMMONED_UNITS_NBA2: i32 = cc!("Nba2");
pub const ABILITY_ILF_MAXIMUM_CREEP_LEVEL_NCH1: i32 = cc!("Nch1");
pub const ABILITY_ILF_ATTACKS_PREVENTED: i32 = cc!("Nsi1");
pub const ABILITY_ILF_MAXIMUM_NUMBER_OF_TARGETS_EFK3: i32 = cc!("Efk3");
pub const ABILITY_ILF_NUMBER_OF_SUMMONED_UNITS_ESV1: i32 = cc!("Esv1");
pub const ABILITY_ILF_MAXIMUM_NUMBER_OF_CORPSES_EXH1: i32 = cc!("exh1");
pub const ABILITY_ILF_ITEM_CAPACITY: i32 = cc!("inv1");
pub const ABILITY_ILF_MAXIMUM_NUMBER_OF_TARGETS_SPL2: i32 = cc!("spl2");
pub const ABILITY_ILF_ALLOW_WHEN_FULL_IRL3: i32 = cc!("irl3");
pub const ABILITY_ILF_MAXIMUM_DISPELLED_UNITS: i32 = cc!("idc3");
pub const ABILITY_ILF_NUMBER_OF_LURES: i32 = cc!("imo1");
pub const ABILITY_ILF_NEW_TIME_OF_DAY_HOUR: i32 = cc!("ict1");
pub const ABILITY_ILF_NEW_TIME_OF_DAY_MINUTE: i32 = cc!("ict2");
pub const ABILITY_ILF_NUMBER_OF_UNITS_CREATED_MEC1: i32 = cc!("mec1");
pub const ABILITY_ILF_MINIMUM_SPELLS: i32 = cc!("spb3");
pub const ABILITY_ILF_MAXIMUM_SPELLS: i32 = cc!("spb4");
pub const ABILITY_ILF_DISABLED_ATTACK_INDEX: i32 = cc!("gra3");
pub const ABILITY_ILF_ENABLED_ATTACK_INDEX_GRA4: i32 = cc!("gra4");
pub const ABILITY_ILF_MAXIMUM_ATTACKS: i32 = cc!("gra5");
pub const ABILITY_ILF_BUILDING_TYPES_ALLOWED_NPR1: i32 = cc!("Npr1");
pub const ABILITY_ILF_BUILDING_TYPES_ALLOWED_NSA1: i32 = cc!("Nsa1");
pub const ABILITY_ILF_ATTACK_MODIFICATION: i32 = cc!("Iaa1");
pub const ABILITY_ILF_SUMMONED_UNIT_COUNT_NPA5: i32 = cc!("Npa5");
pub const ABILITY_ILF_UPGRADE_LEVELS: i32 = cc!("Igl1");
pub const ABILITY_ILF_NUMBER_OF_SUMMONED_UNITS_NDO2: i32 = cc!("Ndo2");
pub const ABILITY_ILF_BEASTS_PER_SECOND: i32 = cc!("Nst1");
pub const ABILITY_ILF_TARGET_TYPE: i32 = cc!("Ncl2");
pub const ABILITY_ILF_OPTIONS: i32 = cc!("Ncl3");
pub const ABILITY_ILF_ARMOR_PENALTY_NAB3: i32 = cc!("Nab3");
pub const ABILITY_ILF_WAVE_COUNT_NHS6: i32 = cc!("Nhs6");
pub const ABILITY_ILF_MAX_CREEP_LEVEL_NTM3: i32 = cc!("Ntm3");
pub const ABILITY_ILF_MISSILE_COUNT: i32 = cc!("Ncs3");
pub const ABILITY_ILF_SPLIT_ATTACK_COUNT: i32 = cc!("Nlm3");
pub const ABILITY_ILF_GENERATION_COUNT: i32 = cc!("Nlm6");
pub const ABILITY_ILF_ROCK_RING_COUNT: i32 = cc!("Nvc1");
pub const ABILITY_ILF_WAVE_COUNT_NVC2: i32 = cc!("Nvc2");
pub const ABILITY_ILF_PREFER_HOSTILES_TAU1: i32 = cc!("Tau1");
pub const ABILITY_ILF_PREFER_FRIENDLIES_TAU2: i32 = cc!("Tau2");
pub const ABILITY_ILF_MAX_UNITS_TAU3: i32 = cc!("Tau3");
pub const ABILITY_ILF_NUMBER_OF_PULSES: i32 = cc!("Tau4");
pub const ABILITY_ILF_SUMMONED_UNIT_TYPE_HWE1: i32 = cc!("Hwe1");
pub const ABILITY_ILF_SUMMONED_UNIT_UIN4: i32 = cc!("Uin4");
pub const ABILITY_ILF_SUMMONED_UNIT_OSF1: i32 = cc!("Osf1");
pub const ABILITY_ILF_SUMMONED_UNIT_TYPE_EFNU: i32 = cc!("Efnu");
pub const ABILITY_ILF_SUMMONED_UNIT_TYPE_NBAU: i32 = cc!("Nbau");
pub const ABILITY_ILF_SUMMONED_UNIT_TYPE_NTOU: i32 = cc!("Ntou");
pub const ABILITY_ILF_SUMMONED_UNIT_TYPE_ESVU: i32 = cc!("Esvu");
pub const ABILITY_ILF_SUMMONED_UNIT_TYPES: i32 = cc!("Nef1");
pub const ABILITY_ILF_SUMMONED_UNIT_TYPE_NDOU: i32 = cc!("Ndou");
pub const ABILITY_ILF_ALTERNATE_FORM_UNIT_EMEU: i32 = cc!("Emeu");
pub const ABILITY_ILF_PLAGUE_WARD_UNIT_TYPE: i32 = cc!("Aplu");
pub const ABILITY_ILF_ALLOWED_UNIT_TYPE_BTL1: i32 = cc!("Btl1");
pub const ABILITY_ILF_NEW_UNIT_TYPE: i32 = cc!("Cha1");
pub const ABILITY_ILF_RESULTING_UNIT_TYPE_ENT1: i32 = cc!("ent1");
pub const ABILITY_ILF_CORPSE_UNIT_TYPE: i32 = cc!("Gydu");
pub const ABILITY_ILF_ALLOWED_UNIT_TYPE_LOA1: i32 = cc!("Loa1");
pub const ABILITY_ILF_UNIT_TYPE_FOR_LIMIT_CHECK: i32 = cc!("Raiu");
pub const ABILITY_ILF_WARD_UNIT_TYPE_STAU: i32 = cc!("Stau");
pub const ABILITY_ILF_EFFECT_ABILITY: i32 = cc!("Iobu");
pub const ABILITY_ILF_CONVERSION_UNIT: i32 = cc!("Ndc2");
pub const ABILITY_ILF_UNIT_TO_PRESERVE: i32 = cc!("Nsl1");
pub const ABILITY_ILF_UNIT_TYPE_ALLOWED: i32 = cc!("Chl1");
pub const ABILITY_ILF_SWARM_UNIT_TYPE: i32 = cc!("Ulsu");
pub const ABILITY_ILF_RESULTING_UNIT_TYPE_COAU: i32 = cc!("coau");
pub const ABILITY_ILF_UNIT_TYPE_EXHU: i32 = cc!("exhu");
pub const ABILITY_ILF_WARD_UNIT_TYPE_HWDU: i32 = cc!("hwdu");
pub const ABILITY_ILF_LURE_UNIT_TYPE: i32 = cc!("imou");
pub const ABILITY_ILF_UNIT_TYPE_IPMU: i32 = cc!("ipmu");
pub const ABILITY_ILF_FACTORY_UNIT_ID: i32 = cc!("Nsyu");
pub const ABILITY_ILF_SPAWN_UNIT_ID_NFYU: i32 = cc!("Nfyu");
pub const ABILITY_ILF_DESTRUCTIBLE_ID: i32 = cc!("Nvcu");
pub const ABILITY_ILF_UPGRADE_TYPE: i32 = cc!("Iglu");
pub const ABILITY_RLF_CASTING_TIME: i32 = cc!("acas");
pub const ABILITY_RLF_DURATION_NORMAL: i32 = cc!("adur");
pub const ABILITY_RLF_DURATION_HERO: i32 = cc!("ahdu");
pub const ABILITY_RLF_COOLDOWN: i32 = cc!("acdn");
pub const ABILITY_RLF_AREA_OF_EFFECT: i32 = cc!("aare");
pub const ABILITY_RLF_CAST_RANGE: i32 = cc!("aran");
pub const ABILITY_RLF_DAMAGE_HBZ2: i32 = cc!("Hbz2");
pub const ABILITY_RLF_BUILDING_REDUCTION_HBZ4: i32 = cc!("Hbz4");
pub const ABILITY_RLF_DAMAGE_PER_SECOND_HBZ5: i32 = cc!("Hbz5");
pub const ABILITY_RLF_MAXIMUM_DAMAGE_PER_WAVE: i32 = cc!("Hbz6");
pub const ABILITY_RLF_MANA_REGENERATION_INCREASE: i32 = cc!("Hab1");
pub const ABILITY_RLF_CASTING_DELAY: i32 = cc!("Hmt2");
pub const ABILITY_RLF_DAMAGE_PER_SECOND_OWW1: i32 = cc!("Oww1");
pub const ABILITY_RLF_MAGIC_DAMAGE_REDUCTION_OWW2: i32 = cc!("Oww2");
pub const ABILITY_RLF_CHANCE_TO_CRITICAL_STRIKE: i32 = cc!("Ocr1");
pub const ABILITY_RLF_DAMAGE_MULTIPLIER_OCR2: i32 = cc!("Ocr2");
pub const ABILITY_RLF_DAMAGE_BONUS_OCR3: i32 = cc!("Ocr3");
pub const ABILITY_RLF_CHANCE_TO_EVADE_OCR4: i32 = cc!("Ocr4");
pub const ABILITY_RLF_DAMAGE_DEALT_PERCENT_OMI2: i32 = cc!("Omi2");
pub const ABILITY_RLF_DAMAGE_TAKEN_PERCENT_OMI3: i32 = cc!("Omi3");
pub const ABILITY_RLF_ANIMATION_DELAY: i32 = cc!("Omi4");
pub const ABILITY_RLF_TRANSITION_TIME: i32 = cc!("Owk1");
pub const ABILITY_RLF_MOVEMENT_SPEED_INCREASE_PERCENT_OWK2: i32 = cc!("Owk2");
pub const ABILITY_RLF_BACKSTAB_DAMAGE: i32 = cc!("Owk3");
pub const ABILITY_RLF_AMOUNT_HEALED_DAMAGED_UDC1: i32 = cc!("Udc1");
pub const ABILITY_RLF_LIFE_CONVERTED_TO_MANA: i32 = cc!("Udp1");
pub const ABILITY_RLF_LIFE_CONVERTED_TO_LIFE: i32 = cc!("Udp2");
pub const ABILITY_RLF_MOVEMENT_SPEED_INCREASE_PERCENT_UAU1: i32 = cc!("Uau1");
pub const ABILITY_RLF_LIFE_REGENERATION_INCREASE_PERCENT: i32 = cc!("Uau2");
pub const ABILITY_RLF_CHANCE_TO_EVADE_EEV1: i32 = cc!("Eev1");
pub const ABILITY_RLF_DAMAGE_PER_INTERVAL: i32 = cc!("Eim1");
pub const ABILITY_RLF_MANA_DRAINED_PER_SECOND_EIM2: i32 = cc!("Eim2");
pub const ABILITY_RLF_BUFFER_MANA_REQUIRED: i32 = cc!("Eim3");
pub const ABILITY_RLF_MAX_MANA_DRAINED: i32 = cc!("Emb1");
pub const ABILITY_RLF_BOLT_DELAY: i32 = cc!("Emb2");
pub const ABILITY_RLF_BOLT_LIFETIME: i32 = cc!("Emb3");
pub const ABILITY_RLF_ALTITUDE_ADJUSTMENT_DURATION: i32 = cc!("Eme3");
pub const ABILITY_RLF_LANDING_DELAY_TIME: i32 = cc!("Eme4");
pub const ABILITY_RLF_ALTERNATE_FORM_HIT_POINT_BONUS: i32 = cc!("Eme5");
pub const ABILITY_RLF_MOVE_SPEED_BONUS_INFO_PANEL_ONLY: i32 = cc!("Ncr5");
pub const ABILITY_RLF_ATTACK_SPEED_BONUS_INFO_PANEL_ONLY: i32 = cc!("Ncr6");
pub const ABILITY_RLF_LIFE_REGENERATION_RATE_PER_SECOND: i32 = cc!("ave5");
pub const ABILITY_RLF_STUN_DURATION_USL1: i32 = cc!("Usl1");
pub const ABILITY_RLF_ATTACK_DAMAGE_STOLEN_PERCENT: i32 = cc!("Uav1");
pub const ABILITY_RLF_DAMAGE_UCS1: i32 = cc!("Ucs1");
pub const ABILITY_RLF_MAX_DAMAGE_UCS2: i32 = cc!("Ucs2");
pub const ABILITY_RLF_DISTANCE_UCS3: i32 = cc!("Ucs3");
pub const ABILITY_RLF_FINAL_AREA_UCS4: i32 = cc!("Ucs4");
pub const ABILITY_RLF_DAMAGE_UIN1: i32 = cc!("Uin1");
pub const ABILITY_RLF_DURATION: i32 = cc!("Uin2");
pub const ABILITY_RLF_IMPACT_DELAY: i32 = cc!("Uin3");
pub const ABILITY_RLF_DAMAGE_PER_TARGET_OCL1: i32 = cc!("Ocl1");
pub const ABILITY_RLF_DAMAGE_REDUCTION_PER_TARGET: i32 = cc!("Ocl3");
pub const ABILITY_RLF_EFFECT_DELAY_OEQ1: i32 = cc!("Oeq1");
pub const ABILITY_RLF_DAMAGE_PER_SECOND_TO_BUILDINGS: i32 = cc!("Oeq2");
pub const ABILITY_RLF_UNITS_SLOWED_PERCENT: i32 = cc!("Oeq3");
pub const ABILITY_RLF_FINAL_AREA_OEQ4: i32 = cc!("Oeq4");
pub const ABILITY_RLF_DAMAGE_PER_SECOND_EER1: i32 = cc!("Eer1");
pub const ABILITY_RLF_DAMAGE_DEALT_TO_ATTACKERS: i32 = cc!("Eah1");
pub const ABILITY_RLF_LIFE_HEALED: i32 = cc!("Etq1");
pub const ABILITY_RLF_HEAL_INTERVAL: i32 = cc!("Etq2");
pub const ABILITY_RLF_BUILDING_REDUCTION_ETQ3: i32 = cc!("Etq3");
pub const ABILITY_RLF_INITIAL_IMMUNITY_DURATION: i32 = cc!("Etq4");
pub const ABILITY_RLF_MAX_LIFE_DRAINED_PER_SECOND_PERCENT: i32 = cc!("Udd1");
pub const ABILITY_RLF_BUILDING_REDUCTION_UDD2: i32 = cc!("Udd2");
pub const ABILITY_RLF_ARMOR_DURATION: i32 = cc!("Ufa1");
pub const ABILITY_RLF_ARMOR_BONUS_UFA2: i32 = cc!("Ufa2");
pub const ABILITY_RLF_AREA_OF_EFFECT_DAMAGE: i32 = cc!("Ufn1");
pub const ABILITY_RLF_SPECIFIC_TARGET_DAMAGE_UFN2: i32 = cc!("Ufn2");
pub const ABILITY_RLF_DAMAGE_BONUS_HFA1: i32 = cc!("Hfa1");
pub const ABILITY_RLF_DAMAGE_DEALT_ESF1: i32 = cc!("Esf1");
pub const ABILITY_RLF_DAMAGE_INTERVAL_ESF2: i32 = cc!("Esf2");
pub const ABILITY_RLF_BUILDING_REDUCTION_ESF3: i32 = cc!("Esf3");
pub const ABILITY_RLF_DAMAGE_BONUS_PERCENT: i32 = cc!("Ear1");
pub const ABILITY_RLF_DEFENSE_BONUS_HAV1: i32 = cc!("Hav1");
pub const ABILITY_RLF_HIT_POINT_BONUS: i32 = cc!("Hav2");
pub const ABILITY_RLF_DAMAGE_BONUS_HAV3: i32 = cc!("Hav3");
pub const ABILITY_RLF_MAGIC_DAMAGE_REDUCTION_HAV4: i32 = cc!("Hav4");
pub const ABILITY_RLF_CHANCE_TO_BASH: i32 = cc!("Hbh1");
pub const ABILITY_RLF_DAMAGE_MULTIPLIER_HBH2: i32 = cc!("Hbh2");
pub const ABILITY_RLF_DAMAGE_BONUS_HBH3: i32 = cc!("Hbh3");
pub const ABILITY_RLF_CHANCE_TO_MISS_HBH4: i32 = cc!("Hbh4");
pub const ABILITY_RLF_DAMAGE_HTB1: i32 = cc!("Htb1");
pub const ABILITY_RLF_AOE_DAMAGE: i32 = cc!("Htc1");
pub const ABILITY_RLF_SPECIFIC_TARGET_DAMAGE_HTC2: i32 = cc!("Htc2");
pub const ABILITY_RLF_MOVEMENT_SPEED_REDUCTION_PERCENT_HTC3: i32 = cc!("Htc3");
pub const ABILITY_RLF_ATTACK_SPEED_REDUCTION_PERCENT_HTC4: i32 = cc!("Htc4");
pub const ABILITY_RLF_ARMOR_BONUS_HAD1: i32 = cc!("Had1");
pub const ABILITY_RLF_AMOUNT_HEALED_DAMAGED_HHB1: i32 = cc!("Hhb1");
pub const ABILITY_RLF_EXTRA_DAMAGE_HCA1: i32 = cc!("Hca1");
pub const ABILITY_RLF_MOVEMENT_SPEED_FACTOR_HCA2: i32 = cc!("Hca2");
pub const ABILITY_RLF_ATTACK_SPEED_FACTOR_HCA3: i32 = cc!("Hca3");
pub const ABILITY_RLF_MOVEMENT_SPEED_INCREASE_PERCENT_OAE1: i32 = cc!("Oae1");
pub const ABILITY_RLF_ATTACK_SPEED_INCREASE_PERCENT_OAE2: i32 = cc!("Oae2");
pub const ABILITY_RLF_REINCARNATION_DELAY: i32 = cc!("Ore1");
pub const ABILITY_RLF_DAMAGE_OSH1: i32 = cc!("Osh1");
pub const ABILITY_RLF_MAXIMUM_DAMAGE_OSH2: i32 = cc!("Osh2");
pub const ABILITY_RLF_DISTANCE_OSH3: i32 = cc!("Osh3");
pub const ABILITY_RLF_FINAL_AREA_OSH4: i32 = cc!("Osh4");
pub const ABILITY_RLF_GRAPHIC_DELAY_NFD1: i32 = cc!("Nfd1");
pub const ABILITY_RLF_GRAPHIC_DURATION_NFD2: i32 = cc!("Nfd2");
pub const ABILITY_RLF_DAMAGE_NFD3: i32 = cc!("Nfd3");
pub const ABILITY_RLF_SUMMONED_UNIT_DAMAGE_AMS1: i32 = cc!("Ams1");
pub const ABILITY_RLF_MAGIC_DAMAGE_REDUCTION_AMS2: i32 = cc!("Ams2");
pub const ABILITY_RLF_AURA_DURATION: i32 = cc!("Apl1");
pub const ABILITY_RLF_DAMAGE_PER_SECOND_APL2: i32 = cc!("Apl2");
pub const ABILITY_RLF_DURATION_OF_PLAGUE_WARD: i32 = cc!("Apl3");
pub const ABILITY_RLF_AMOUNT_OF_HIT_POINTS_REGENERATED: i32 = cc!("Oar1");
pub const ABILITY_RLF_ATTACK_DAMAGE_INCREASE_AKB1: i32 = cc!("Akb1");
pub const ABILITY_RLF_MANA_LOSS_ADM1: i32 = cc!("Adm1");
pub const ABILITY_RLF_SUMMONED_UNIT_DAMAGE_ADM2: i32 = cc!("Adm2");
pub const ABILITY_RLF_EXPANSION_AMOUNT: i32 = cc!("Bli1");
pub const ABILITY_RLF_INTERVAL_DURATION_BGM2: i32 = cc!("Bgm2");
pub const ABILITY_RLF_RADIUS_OF_MINING_RING: i32 = cc!("Bgm4");
pub const ABILITY_RLF_ATTACK_SPEED_INCREASE_PERCENT_BLO1: i32 = cc!("Blo1");
pub const ABILITY_RLF_MOVEMENT_SPEED_INCREASE_PERCENT_BLO2: i32 = cc!("Blo2");
pub const ABILITY_RLF_SCALING_FACTOR: i32 = cc!("Blo3");
pub const ABILITY_RLF_HIT_POINTS_PER_SECOND_CAN1: i32 = cc!("Can1");
pub const ABILITY_RLF_MAX_HIT_POINTS: i32 = cc!("Can2");
pub const ABILITY_RLF_DAMAGE_PER_SECOND_DEV2: i32 = cc!("Dev2");
pub const ABILITY_RLF_MOVEMENT_UPDATE_FREQUENCY_CHD1: i32 = cc!("Chd1");
pub const ABILITY_RLF_ATTACK_UPDATE_FREQUENCY_CHD2: i32 = cc!("Chd2");
pub const ABILITY_RLF_SUMMONED_UNIT_DAMAGE_CHD3: i32 = cc!("Chd3");
pub const ABILITY_RLF_MOVEMENT_SPEED_REDUCTION_PERCENT_CRI1: i32 = cc!("Cri1");
pub const ABILITY_RLF_ATTACK_SPEED_REDUCTION_PERCENT_CRI2: i32 = cc!("Cri2");
pub const ABILITY_RLF_DAMAGE_REDUCTION_CRI3: i32 = cc!("Cri3");
pub const ABILITY_RLF_CHANCE_TO_MISS_CRS: i32 = cc!("Crs1");
pub const ABILITY_RLF_FULL_DAMAGE_RADIUS_DDA1: i32 = cc!("Dda1");
pub const ABILITY_RLF_FULL_DAMAGE_AMOUNT_DDA2: i32 = cc!("Dda2");
pub const ABILITY_RLF_PARTIAL_DAMAGE_RADIUS: i32 = cc!("Dda3");
pub const ABILITY_RLF_PARTIAL_DAMAGE_AMOUNT: i32 = cc!("Dda4");
pub const ABILITY_RLF_BUILDING_DAMAGE_FACTOR_SDS1: i32 = cc!("Sds1");
pub const ABILITY_RLF_MAX_DAMAGE_UCO5: i32 = cc!("Uco5");
pub const ABILITY_RLF_MOVE_SPEED_BONUS_UCO6: i32 = cc!("Uco6");
pub const ABILITY_RLF_DAMAGE_TAKEN_PERCENT_DEF1: i32 = cc!("Def1");
pub const ABILITY_RLF_DAMAGE_DEALT_PERCENT_DEF2: i32 = cc!("Def2");
pub const ABILITY_RLF_MOVEMENT_SPEED_FACTOR_DEF3: i32 = cc!("Def3");
pub const ABILITY_RLF_ATTACK_SPEED_FACTOR_DEF4: i32 = cc!("Def4");
pub const ABILITY_RLF_MAGIC_DAMAGE_REDUCTION_DEF5: i32 = cc!("Def5");
pub const ABILITY_RLF_CHANCE_TO_DEFLECT: i32 = cc!("Def6");
pub const ABILITY_RLF_DEFLECT_DAMAGE_TAKEN_PIERCING: i32 = cc!("Def7");
pub const ABILITY_RLF_DEFLECT_DAMAGE_TAKEN_SPELLS: i32 = cc!("Def8");
pub const ABILITY_RLF_RIP_DELAY: i32 = cc!("Eat1");
pub const ABILITY_RLF_EAT_DELAY: i32 = cc!("Eat2");
pub const ABILITY_RLF_HIT_POINTS_GAINED_EAT3: i32 = cc!("Eat3");
pub const ABILITY_RLF_AIR_UNIT_LOWER_DURATION: i32 = cc!("Ens1");
pub const ABILITY_RLF_AIR_UNIT_HEIGHT: i32 = cc!("Ens2");
pub const ABILITY_RLF_MELEE_ATTACK_RANGE: i32 = cc!("Ens3");
pub const ABILITY_RLF_INTERVAL_DURATION_EGM2: i32 = cc!("Egm2");
pub const ABILITY_RLF_EFFECT_DELAY_FLA2: i32 = cc!("Fla2");
pub const ABILITY_RLF_MINING_DURATION: i32 = cc!("Gld2");
pub const ABILITY_RLF_RADIUS_OF_GRAVESTONES: i32 = cc!("Gyd2");
pub const ABILITY_RLF_RADIUS_OF_CORPSES: i32 = cc!("Gyd3");
pub const ABILITY_RLF_HIT_POINTS_GAINED_HEA1: i32 = cc!("Hea1");
pub const ABILITY_RLF_DAMAGE_INCREASE_PERCENT_INF1: i32 = cc!("Inf1");
pub const ABILITY_RLF_AUTOCAST_RANGE: i32 = cc!("Inf3");
pub const ABILITY_RLF_LIFE_REGEN_RATE: i32 = cc!("Inf4");
pub const ABILITY_RLF_GRAPHIC_DELAY_LIT1: i32 = cc!("Lit1");
pub const ABILITY_RLF_GRAPHIC_DURATION_LIT2: i32 = cc!("Lit2");
pub const ABILITY_RLF_DAMAGE_PER_SECOND_LSH1: i32 = cc!("Lsh1");
pub const ABILITY_RLF_MANA_GAINED: i32 = cc!("Mbt1");
pub const ABILITY_RLF_HIT_POINTS_GAINED_MBT2: i32 = cc!("Mbt2");
pub const ABILITY_RLF_AUTOCAST_REQUIREMENT: i32 = cc!("Mbt3");
pub const ABILITY_RLF_WATER_HEIGHT: i32 = cc!("Mbt4");
pub const ABILITY_RLF_ACTIVATION_DELAY_MIN1: i32 = cc!("Min1");
pub const ABILITY_RLF_INVISIBILITY_TRANSITION_TIME: i32 = cc!("Min2");
pub const ABILITY_RLF_ACTIVATION_RADIUS: i32 = cc!("Neu1");
pub const ABILITY_RLF_AMOUNT_REGENERATED: i32 = cc!("Arm1");
pub const ABILITY_RLF_DAMAGE_PER_SECOND_POI1: i32 = cc!("Poi1");
pub const ABILITY_RLF_ATTACK_SPEED_FACTOR_POI2: i32 = cc!("Poi2");
pub const ABILITY_RLF_MOVEMENT_SPEED_FACTOR_POI3: i32 = cc!("Poi3");
pub const ABILITY_RLF_EXTRA_DAMAGE_POA1: i32 = cc!("Poa1");
pub const ABILITY_RLF_DAMAGE_PER_SECOND_POA2: i32 = cc!("Poa2");
pub const ABILITY_RLF_ATTACK_SPEED_FACTOR_POA3: i32 = cc!("Poa3");
pub const ABILITY_RLF_MOVEMENT_SPEED_FACTOR_POA4: i32 = cc!("Poa4");
pub const ABILITY_RLF_DAMAGE_AMPLIFICATION: i32 = cc!("Pos2");
pub const ABILITY_RLF_CHANCE_TO_STOMP_PERCENT: i32 = cc!("War1");
pub const ABILITY_RLF_DAMAGE_DEALT_WAR2: i32 = cc!("War2");
pub const ABILITY_RLF_FULL_DAMAGE_RADIUS_WAR3: i32 = cc!("War3");
pub const ABILITY_RLF_HALF_DAMAGE_RADIUS_WAR4: i32 = cc!("War4");
pub const ABILITY_RLF_SUMMONED_UNIT_DAMAGE_PRG3: i32 = cc!("Prg3");
pub const ABILITY_RLF_UNIT_PAUSE_DURATION: i32 = cc!("Prg4");
pub const ABILITY_RLF_HERO_PAUSE_DURATION: i32 = cc!("Prg5");
pub const ABILITY_RLF_HIT_POINTS_GAINED_REJ1: i32 = cc!("Rej1");
pub const ABILITY_RLF_MANA_POINTS_GAINED_REJ2: i32 = cc!("Rej2");
pub const ABILITY_RLF_MINIMUM_LIFE_REQUIRED: i32 = cc!("Rpb3");
pub const ABILITY_RLF_MINIMUM_MANA_REQUIRED: i32 = cc!("Rpb4");
pub const ABILITY_RLF_REPAIR_COST_RATIO: i32 = cc!("Rep1");
pub const ABILITY_RLF_REPAIR_TIME_RATIO: i32 = cc!("Rep2");
pub const ABILITY_RLF_POWERBUILD_COST: i32 = cc!("Rep3");
pub const ABILITY_RLF_POWERBUILD_RATE: i32 = cc!("Rep4");
pub const ABILITY_RLF_NAVAL_RANGE_BONUS: i32 = cc!("Rep5");
pub const ABILITY_RLF_DAMAGE_INCREASE_PERCENT_ROA1: i32 = cc!("Roa1");
pub const ABILITY_RLF_LIFE_REGENERATION_RATE: i32 = cc!("Roa3");
pub const ABILITY_RLF_MANA_REGEN: i32 = cc!("Roa4");
pub const ABILITY_RLF_DAMAGE_INCREASE: i32 = cc!("Nbr1");
pub const ABILITY_RLF_SALVAGE_COST_RATIO: i32 = cc!("Sal1");
pub const ABILITY_RLF_IN_FLIGHT_SIGHT_RADIUS: i32 = cc!("Esn1");
pub const ABILITY_RLF_HOVERING_SIGHT_RADIUS: i32 = cc!("Esn2");
pub const ABILITY_RLF_HOVERING_HEIGHT: i32 = cc!("Esn3");
pub const ABILITY_RLF_DURATION_OF_OWLS: i32 = cc!("Esn5");
pub const ABILITY_RLF_FADE_DURATION: i32 = cc!("Shm1");
pub const ABILITY_RLF_DAY_NIGHT_DURATION: i32 = cc!("Shm2");
pub const ABILITY_RLF_ACTION_DURATION: i32 = cc!("Shm3");
pub const ABILITY_RLF_MOVEMENT_SPEED_FACTOR_SLO1: i32 = cc!("Slo1");
pub const ABILITY_RLF_ATTACK_SPEED_FACTOR_SLO2: i32 = cc!("Slo2");
pub const ABILITY_RLF_DAMAGE_PER_SECOND_SPO1: i32 = cc!("Spo1");
pub const ABILITY_RLF_MOVEMENT_SPEED_FACTOR_SPO2: i32 = cc!("Spo2");
pub const ABILITY_RLF_ATTACK_SPEED_FACTOR_SPO3: i32 = cc!("Spo3");
pub const ABILITY_RLF_ACTIVATION_DELAY_STA1: i32 = cc!("Sta1");
pub const ABILITY_RLF_DETECTION_RADIUS_STA2: i32 = cc!("Sta2");
pub const ABILITY_RLF_DETONATION_RADIUS: i32 = cc!("Sta3");
pub const ABILITY_RLF_STUN_DURATION_STA4: i32 = cc!("Sta4");
pub const ABILITY_RLF_ATTACK_SPEED_BONUS_PERCENT: i32 = cc!("Uhf1");
pub const ABILITY_RLF_DAMAGE_PER_SECOND_UHF2: i32 = cc!("Uhf2");
pub const ABILITY_RLF_LUMBER_PER_INTERVAL: i32 = cc!("Wha1");
pub const ABILITY_RLF_ART_ATTACHMENT_HEIGHT: i32 = cc!("Wha3");
pub const ABILITY_RLF_TELEPORT_AREA_WIDTH: i32 = cc!("Wrp1");
pub const ABILITY_RLF_TELEPORT_AREA_HEIGHT: i32 = cc!("Wrp2");
pub const ABILITY_RLF_LIFE_STOLEN_PER_ATTACK: i32 = cc!("Ivam");
pub const ABILITY_RLF_DAMAGE_BONUS_IDAM: i32 = cc!("Idam");
pub const ABILITY_RLF_CHANCE_TO_HIT_UNITS_PERCENT: i32 = cc!("Iob2");
pub const ABILITY_RLF_CHANCE_TO_HIT_HEROS_PERCENT: i32 = cc!("Iob3");
pub const ABILITY_RLF_CHANCE_TO_HIT_SUMMONS_PERCENT: i32 = cc!("Iob4");
pub const ABILITY_RLF_DELAY_FOR_TARGET_EFFECT: i32 = cc!("Idel");
pub const ABILITY_RLF_DAMAGE_DEALT_PERCENT_OF_NORMAL: i32 = cc!("Iild");
pub const ABILITY_RLF_DAMAGE_RECEIVED_MULTIPLIER: i32 = cc!("Iilw");
pub const ABILITY_RLF_MANA_REGENERATION_BONUS_AS_FRACTION_OF_NORMAL: i32 = cc!("Imrp");
pub const ABILITY_RLF_MOVEMENT_SPEED_INCREASE_ISPI: i32 = cc!("Ispi");
pub const ABILITY_RLF_DAMAGE_PER_SECOND_IDPS: i32 = cc!("Idps");
pub const ABILITY_RLF_ATTACK_DAMAGE_INCREASE_CAC1: i32 = cc!("Cac1");
pub const ABILITY_RLF_DAMAGE_PER_SECOND_COR1: i32 = cc!("Cor1");
pub const ABILITY_RLF_ATTACK_SPEED_INCREASE_ISX1: i32 = cc!("Isx1");
pub const ABILITY_RLF_DAMAGE_WRS1: i32 = cc!("Wrs1");
pub const ABILITY_RLF_TERRAIN_DEFORMATION_AMPLITUDE: i32 = cc!("Wrs2");
pub const ABILITY_RLF_DAMAGE_CTC1: i32 = cc!("Ctc1");
pub const ABILITY_RLF_EXTRA_DAMAGE_TO_TARGET: i32 = cc!("Ctc2");
pub const ABILITY_RLF_MOVEMENT_SPEED_REDUCTION_CTC3: i32 = cc!("Ctc3");
pub const ABILITY_RLF_ATTACK_SPEED_REDUCTION_CTC4: i32 = cc!("Ctc4");
pub const ABILITY_RLF_DAMAGE_CTB1: i32 = cc!("Ctb1");
pub const ABILITY_RLF_CASTING_DELAY_SECONDS: i32 = cc!("Uds2");
pub const ABILITY_RLF_MANA_LOSS_PER_UNIT_DTN1: i32 = cc!("Dtn1");
pub const ABILITY_RLF_DAMAGE_TO_SUMMONED_UNITS_DTN2: i32 = cc!("Dtn2");
pub const ABILITY_RLF_TRANSITION_TIME_SECONDS: i32 = cc!("Ivs1");
pub const ABILITY_RLF_MANA_DRAINED_PER_SECOND_NMR1: i32 = cc!("Nmr1");
pub const ABILITY_RLF_CHANCE_TO_REDUCE_DAMAGE_PERCENT: i32 = cc!("Ssk1");
pub const ABILITY_RLF_MINIMUM_DAMAGE: i32 = cc!("Ssk2");
pub const ABILITY_RLF_IGNORED_DAMAGE: i32 = cc!("Ssk3");
pub const ABILITY_RLF_FULL_DAMAGE_DEALT: i32 = cc!("Hfs1");
pub const ABILITY_RLF_FULL_DAMAGE_INTERVAL: i32 = cc!("Hfs2");
pub const ABILITY_RLF_HALF_DAMAGE_DEALT: i32 = cc!("Hfs3");
pub const ABILITY_RLF_HALF_DAMAGE_INTERVAL: i32 = cc!("Hfs4");
pub const ABILITY_RLF_BUILDING_REDUCTION_HFS5: i32 = cc!("Hfs5");
pub const ABILITY_RLF_MAXIMUM_DAMAGE_HFS6: i32 = cc!("Hfs6");
pub const ABILITY_RLF_MANA_PER_HIT_POINT: i32 = cc!("Nms1");
pub const ABILITY_RLF_DAMAGE_ABSORBED_PERCENT: i32 = cc!("Nms2");
pub const ABILITY_RLF_WAVE_DISTANCE: i32 = cc!("Uim1");
pub const ABILITY_RLF_WAVE_TIME_SECONDS: i32 = cc!("Uim2");
pub const ABILITY_RLF_DAMAGE_DEALT_UIM3: i32 = cc!("Uim3");
pub const ABILITY_RLF_AIR_TIME_SECONDS_UIM4: i32 = cc!("Uim4");
pub const ABILITY_RLF_UNIT_RELEASE_INTERVAL_SECONDS: i32 = cc!("Uls2");
pub const ABILITY_RLF_DAMAGE_RETURN_FACTOR: i32 = cc!("Uls4");
pub const ABILITY_RLF_DAMAGE_RETURN_THRESHOLD: i32 = cc!("Uls5");
pub const ABILITY_RLF_RETURNED_DAMAGE_FACTOR: i32 = cc!("Uts1");
pub const ABILITY_RLF_RECEIVED_DAMAGE_FACTOR: i32 = cc!("Uts2");
pub const ABILITY_RLF_DEFENSE_BONUS_UTS3: i32 = cc!("Uts3");
pub const ABILITY_RLF_DAMAGE_BONUS_NBA1: i32 = cc!("Nba1");
pub const ABILITY_RLF_SUMMONED_UNIT_DURATION_SECONDS_NBA3: i32 = cc!("Nba3");
pub const ABILITY_RLF_MANA_PER_SUMMONED_HITPOINT: i32 = cc!("Cmg2");
pub const ABILITY_RLF_CHARGE_FOR_CURRENT_LIFE: i32 = cc!("Cmg3");
pub const ABILITY_RLF_HIT_POINTS_DRAINED: i32 = cc!("Ndr1");
pub const ABILITY_RLF_MANA_POINTS_DRAINED: i32 = cc!("Ndr2");
pub const ABILITY_RLF_DRAIN_INTERVAL_SECONDS: i32 = cc!("Ndr3");
pub const ABILITY_RLF_LIFE_TRANSFERRED_PER_SECOND: i32 = cc!("Ndr4");
pub const ABILITY_RLF_MANA_TRANSFERRED_PER_SECOND: i32 = cc!("Ndr5");
pub const ABILITY_RLF_BONUS_LIFE_FACTOR: i32 = cc!("Ndr6");
pub const ABILITY_RLF_BONUS_LIFE_DECAY: i32 = cc!("Ndr7");
pub const ABILITY_RLF_BONUS_MANA_FACTOR: i32 = cc!("Ndr8");
pub const ABILITY_RLF_BONUS_MANA_DECAY: i32 = cc!("Ndr9");
pub const ABILITY_RLF_CHANCE_TO_MISS_PERCENT: i32 = cc!("Nsi2");
pub const ABILITY_RLF_MOVEMENT_SPEED_MODIFIER: i32 = cc!("Nsi3");
pub const ABILITY_RLF_ATTACK_SPEED_MODIFIER: i32 = cc!("Nsi4");
pub const ABILITY_RLF_DAMAGE_PER_SECOND_TDG1: i32 = cc!("Tdg1");
pub const ABILITY_RLF_MEDIUM_DAMAGE_RADIUS_TDG2: i32 = cc!("Tdg2");
pub const ABILITY_RLF_MEDIUM_DAMAGE_PER_SECOND: i32 = cc!("Tdg3");
pub const ABILITY_RLF_SMALL_DAMAGE_RADIUS_TDG4: i32 = cc!("Tdg4");
pub const ABILITY_RLF_SMALL_DAMAGE_PER_SECOND: i32 = cc!("Tdg5");
pub const ABILITY_RLF_AIR_TIME_SECONDS_TSP1: i32 = cc!("Tsp1");
pub const ABILITY_RLF_MINIMUM_HIT_INTERVAL_SECONDS: i32 = cc!("Tsp2");
pub const ABILITY_RLF_DAMAGE_PER_SECOND_NBF5: i32 = cc!("Nbf5");
pub const ABILITY_RLF_MAXIMUM_RANGE: i32 = cc!("Ebl1");
pub const ABILITY_RLF_MINIMUM_RANGE: i32 = cc!("Ebl2");
pub const ABILITY_RLF_DAMAGE_PER_TARGET_EFK1: i32 = cc!("Efk1");
pub const ABILITY_RLF_MAXIMUM_TOTAL_DAMAGE: i32 = cc!("Efk2");
pub const ABILITY_RLF_MAXIMUM_SPEED_ADJUSTMENT: i32 = cc!("Efk4");
pub const ABILITY_RLF_DECAYING_DAMAGE: i32 = cc!("Esh1");
pub const ABILITY_RLF_MOVEMENT_SPEED_FACTOR_ESH2: i32 = cc!("Esh2");
pub const ABILITY_RLF_ATTACK_SPEED_FACTOR_ESH3: i32 = cc!("Esh3");
pub const ABILITY_RLF_DECAY_POWER: i32 = cc!("Esh4");
pub const ABILITY_RLF_INITIAL_DAMAGE_ESH5: i32 = cc!("Esh5");
pub const ABILITY_RLF_MAXIMUM_LIFE_ABSORBED: i32 = cc!("abs1");
pub const ABILITY_RLF_MAXIMUM_MANA_ABSORBED: i32 = cc!("abs2");
pub const ABILITY_RLF_MOVEMENT_SPEED_INCREASE_BSK1: i32 = cc!("bsk1");
pub const ABILITY_RLF_ATTACK_SPEED_INCREASE_BSK2: i32 = cc!("bsk2");
pub const ABILITY_RLF_DAMAGE_TAKEN_INCREASE: i32 = cc!("bsk3");
pub const ABILITY_RLF_LIFE_PER_UNIT: i32 = cc!("dvm1");
pub const ABILITY_RLF_MANA_PER_UNIT: i32 = cc!("dvm2");
pub const ABILITY_RLF_LIFE_PER_BUFF: i32 = cc!("dvm3");
pub const ABILITY_RLF_MANA_PER_BUFF: i32 = cc!("dvm4");
pub const ABILITY_RLF_SUMMONED_UNIT_DAMAGE_DVM5: i32 = cc!("dvm5");
pub const ABILITY_RLF_DAMAGE_BONUS_FAK1: i32 = cc!("fak1");
pub const ABILITY_RLF_MEDIUM_DAMAGE_FACTOR_FAK2: i32 = cc!("fak2");
pub const ABILITY_RLF_SMALL_DAMAGE_FACTOR_FAK3: i32 = cc!("fak3");
pub const ABILITY_RLF_FULL_DAMAGE_RADIUS_FAK4: i32 = cc!("fak4");
pub const ABILITY_RLF_HALF_DAMAGE_RADIUS_FAK5: i32 = cc!("fak5");
pub const ABILITY_RLF_EXTRA_DAMAGE_PER_SECOND: i32 = cc!("liq1");
pub const ABILITY_RLF_MOVEMENT_SPEED_REDUCTION_LIQ2: i32 = cc!("liq2");
pub const ABILITY_RLF_ATTACK_SPEED_REDUCTION_LIQ3: i32 = cc!("liq3");
pub const ABILITY_RLF_MAGIC_DAMAGE_FACTOR: i32 = cc!("mim1");
pub const ABILITY_RLF_UNIT_DAMAGE_PER_MANA_POINT: i32 = cc!("mfl1");
pub const ABILITY_RLF_HERO_DAMAGE_PER_MANA_POINT: i32 = cc!("mfl2");
pub const ABILITY_RLF_UNIT_MAXIMUM_DAMAGE: i32 = cc!("mfl3");
pub const ABILITY_RLF_HERO_MAXIMUM_DAMAGE: i32 = cc!("mfl4");
pub const ABILITY_RLF_DAMAGE_COOLDOWN: i32 = cc!("mfl5");
pub const ABILITY_RLF_DISTRIBUTED_DAMAGE_FACTOR_SPL1: i32 = cc!("spl1");
pub const ABILITY_RLF_LIFE_REGENERATED: i32 = cc!("irl1");
pub const ABILITY_RLF_MANA_REGENERATED: i32 = cc!("irl2");
pub const ABILITY_RLF_MANA_LOSS_PER_UNIT_IDC1: i32 = cc!("idc1");
pub const ABILITY_RLF_SUMMONED_UNIT_DAMAGE_IDC2: i32 = cc!("idc2");
pub const ABILITY_RLF_ACTIVATION_DELAY_IMO2: i32 = cc!("imo2");
pub const ABILITY_RLF_LURE_INTERVAL_SECONDS: i32 = cc!("imo3");
pub const ABILITY_RLF_DAMAGE_BONUS_ISR1: i32 = cc!("isr1");
pub const ABILITY_RLF_DAMAGE_REDUCTION_ISR2: i32 = cc!("isr2");
pub const ABILITY_RLF_DAMAGE_BONUS_IPV1: i32 = cc!("ipv1");
pub const ABILITY_RLF_LIFE_STEAL_AMOUNT: i32 = cc!("ipv2");
pub const ABILITY_RLF_LIFE_RESTORED_FACTOR: i32 = cc!("ast1");
pub const ABILITY_RLF_MANA_RESTORED_FACTOR: i32 = cc!("ast2");
pub const ABILITY_RLF_ATTACH_DELAY: i32 = cc!("gra1");
pub const ABILITY_RLF_REMOVE_DELAY: i32 = cc!("gra2");
pub const ABILITY_RLF_HERO_REGENERATION_DELAY: i32 = cc!("Nsa2");
pub const ABILITY_RLF_UNIT_REGENERATION_DELAY: i32 = cc!("Nsa3");
pub const ABILITY_RLF_MAGIC_DAMAGE_REDUCTION_NSA4: i32 = cc!("Nsa4");
pub const ABILITY_RLF_HIT_POINTS_PER_SECOND_NSA5: i32 = cc!("Nsa5");
pub const ABILITY_RLF_DAMAGE_TO_SUMMONED_UNITS_IXS1: i32 = cc!("Ixs1");
pub const ABILITY_RLF_MAGIC_DAMAGE_REDUCTION_IXS2: i32 = cc!("Ixs2");
pub const ABILITY_RLF_SUMMONED_UNIT_DURATION: i32 = cc!("Npa6");
pub const ABILITY_RLF_SHIELD_COOLDOWN_TIME: i32 = cc!("Nse1");
pub const ABILITY_RLF_DAMAGE_PER_SECOND_NDO1: i32 = cc!("Ndo1");
pub const ABILITY_RLF_SUMMONED_UNIT_DURATION_SECONDS_NDO3: i32 = cc!("Ndo3");
pub const ABILITY_RLF_MEDIUM_DAMAGE_RADIUS_FLK1: i32 = cc!("flk1");
pub const ABILITY_RLF_SMALL_DAMAGE_RADIUS_FLK2: i32 = cc!("flk2");
pub const ABILITY_RLF_FULL_DAMAGE_AMOUNT_FLK3: i32 = cc!("flk3");
pub const ABILITY_RLF_MEDIUM_DAMAGE_AMOUNT: i32 = cc!("flk4");
pub const ABILITY_RLF_SMALL_DAMAGE_AMOUNT: i32 = cc!("flk5");
pub const ABILITY_RLF_MOVEMENT_SPEED_REDUCTION_PERCENT_HBN1: i32 = cc!("Hbn1");
pub const ABILITY_RLF_ATTACK_SPEED_REDUCTION_PERCENT_HBN2: i32 = cc!("Hbn2");
pub const ABILITY_RLF_MAX_MANA_DRAINED_UNITS: i32 = cc!("fbk1");
pub const ABILITY_RLF_DAMAGE_RATIO_UNITS_PERCENT: i32 = cc!("fbk2");
pub const ABILITY_RLF_MAX_MANA_DRAINED_HEROS: i32 = cc!("fbk3");
pub const ABILITY_RLF_DAMAGE_RATIO_HEROS_PERCENT: i32 = cc!("fbk4");
pub const ABILITY_RLF_SUMMONED_DAMAGE: i32 = cc!("fbk5");
pub const ABILITY_RLF_DISTRIBUTED_DAMAGE_FACTOR_NCA1: i32 = cc!("nca1");
pub const ABILITY_RLF_INITIAL_DAMAGE_PXF1: i32 = cc!("pxf1");
pub const ABILITY_RLF_DAMAGE_PER_SECOND_PXF2: i32 = cc!("pxf2");
pub const ABILITY_RLF_DAMAGE_PER_SECOND_MLS1: i32 = cc!("mls1");
pub const ABILITY_RLF_BEAST_COLLISION_RADIUS: i32 = cc!("Nst2");
pub const ABILITY_RLF_DAMAGE_AMOUNT_NST3: i32 = cc!("Nst3");
pub const ABILITY_RLF_DAMAGE_RADIUS: i32 = cc!("Nst4");
pub const ABILITY_RLF_DAMAGE_DELAY: i32 = cc!("Nst5");
pub const ABILITY_RLF_FOLLOW_THROUGH_TIME: i32 = cc!("Ncl1");
pub const ABILITY_RLF_ART_DURATION: i32 = cc!("Ncl4");
pub const ABILITY_RLF_MOVEMENT_SPEED_REDUCTION_PERCENT_NAB1: i32 = cc!("Nab1");
pub const ABILITY_RLF_ATTACK_SPEED_REDUCTION_PERCENT_NAB2: i32 = cc!("Nab2");
pub const ABILITY_RLF_PRIMARY_DAMAGE: i32 = cc!("Nab4");
pub const ABILITY_RLF_SECONDARY_DAMAGE: i32 = cc!("Nab5");
pub const ABILITY_RLF_DAMAGE_INTERVAL_NAB6: i32 = cc!("Nab6");
pub const ABILITY_RLF_GOLD_COST_FACTOR: i32 = cc!("Ntm1");
pub const ABILITY_RLF_LUMBER_COST_FACTOR: i32 = cc!("Ntm2");
pub const ABILITY_RLF_MOVE_SPEED_BONUS_NEG1: i32 = cc!("Neg1");
pub const ABILITY_RLF_DAMAGE_BONUS_NEG2: i32 = cc!("Neg2");
pub const ABILITY_RLF_DAMAGE_AMOUNT_NCS1: i32 = cc!("Ncs1");
pub const ABILITY_RLF_DAMAGE_INTERVAL_NCS2: i32 = cc!("Ncs2");
pub const ABILITY_RLF_MAX_DAMAGE_NCS4: i32 = cc!("Ncs4");
pub const ABILITY_RLF_BUILDING_DAMAGE_FACTOR_NCS5: i32 = cc!("Ncs5");
pub const ABILITY_RLF_EFFECT_DURATION: i32 = cc!("Ncs6");
pub const ABILITY_RLF_SPAWN_INTERVAL_NSY1: i32 = cc!("Nsy1");
pub const ABILITY_RLF_SPAWN_UNIT_DURATION: i32 = cc!("Nsy3");
pub const ABILITY_RLF_SPAWN_UNIT_OFFSET: i32 = cc!("Nsy4");
pub const ABILITY_RLF_LEASH_RANGE_NSY5: i32 = cc!("Nsy5");
pub const ABILITY_RLF_SPAWN_INTERVAL_NFY1: i32 = cc!("Nfy1");
pub const ABILITY_RLF_LEASH_RANGE_NFY2: i32 = cc!("Nfy2");
pub const ABILITY_RLF_CHANCE_TO_DEMOLISH: i32 = cc!("Nde1");
pub const ABILITY_RLF_DAMAGE_MULTIPLIER_BUILDINGS: i32 = cc!("Nde2");
pub const ABILITY_RLF_DAMAGE_MULTIPLIER_UNITS: i32 = cc!("Nde3");
pub const ABILITY_RLF_DAMAGE_MULTIPLIER_HEROES: i32 = cc!("Nde4");
pub const ABILITY_RLF_BONUS_DAMAGE_MULTIPLIER: i32 = cc!("Nic1");
pub const ABILITY_RLF_DEATH_DAMAGE_FULL_AMOUNT: i32 = cc!("Nic2");
pub const ABILITY_RLF_DEATH_DAMAGE_FULL_AREA: i32 = cc!("Nic3");
pub const ABILITY_RLF_DEATH_DAMAGE_HALF_AMOUNT: i32 = cc!("Nic4");
pub const ABILITY_RLF_DEATH_DAMAGE_HALF_AREA: i32 = cc!("Nic5");
pub const ABILITY_RLF_DEATH_DAMAGE_DELAY: i32 = cc!("Nic6");
pub const ABILITY_RLF_DAMAGE_AMOUNT_NSO1: i32 = cc!("Nso1");
pub const ABILITY_RLF_DAMAGE_PERIOD: i32 = cc!("Nso2");
pub const ABILITY_RLF_DAMAGE_PENALTY: i32 = cc!("Nso3");
pub const ABILITY_RLF_MOVEMENT_SPEED_REDUCTION_PERCENT_NSO4: i32 = cc!("Nso4");
pub const ABILITY_RLF_ATTACK_SPEED_REDUCTION_PERCENT_NSO5: i32 = cc!("Nso5");
pub const ABILITY_RLF_SPLIT_DELAY: i32 = cc!("Nlm2");
pub const ABILITY_RLF_MAX_HITPOINT_FACTOR: i32 = cc!("Nlm4");
pub const ABILITY_RLF_LIFE_DURATION_SPLIT_BONUS: i32 = cc!("Nlm5");
pub const ABILITY_RLF_WAVE_INTERVAL: i32 = cc!("Nvc3");
pub const ABILITY_RLF_BUILDING_DAMAGE_FACTOR_NVC4: i32 = cc!("Nvc4");
pub const ABILITY_RLF_FULL_DAMAGE_AMOUNT_NVC5: i32 = cc!("Nvc5");
pub const ABILITY_RLF_HALF_DAMAGE_FACTOR: i32 = cc!("Nvc6");
pub const ABILITY_RLF_INTERVAL_BETWEEN_PULSES: i32 = cc!("Tau5");
pub const ABILITY_BLF_PERCENT_BONUS_HAB2: i32 = cc!("Hab2");
pub const ABILITY_BLF_USE_TELEPORT_CLUSTERING_HMT3: i32 = cc!("Hmt3");
pub const ABILITY_BLF_NEVER_MISS_OCR5: i32 = cc!("Ocr5");
pub const ABILITY_BLF_EXCLUDE_ITEM_DAMAGE: i32 = cc!("Ocr6");
pub const ABILITY_BLF_BACKSTAB_DAMAGE: i32 = cc!("Owk4");
pub const ABILITY_BLF_INHERIT_UPGRADES_UAN3: i32 = cc!("Uan3");
pub const ABILITY_BLF_MANA_CONVERSION_AS_PERCENT: i32 = cc!("Udp3");
pub const ABILITY_BLF_LIFE_CONVERSION_AS_PERCENT: i32 = cc!("Udp4");
pub const ABILITY_BLF_LEAVE_TARGET_ALIVE: i32 = cc!("Udp5");
pub const ABILITY_BLF_PERCENT_BONUS_UAU3: i32 = cc!("Uau3");
pub const ABILITY_BLF_DAMAGE_IS_PERCENT_RECEIVED: i32 = cc!("Eah2");
pub const ABILITY_BLF_MELEE_BONUS: i32 = cc!("Ear2");
pub const ABILITY_BLF_RANGED_BONUS: i32 = cc!("Ear3");
pub const ABILITY_BLF_FLAT_BONUS: i32 = cc!("Ear4");
pub const ABILITY_BLF_NEVER_MISS_HBH5: i32 = cc!("Hbh5");
pub const ABILITY_BLF_PERCENT_BONUS_HAD2: i32 = cc!("Had2");
pub const ABILITY_BLF_CAN_DEACTIVATE: i32 = cc!("Hds1");
pub const ABILITY_BLF_RAISED_UNITS_ARE_INVULNERABLE: i32 = cc!("Hre2");
pub const ABILITY_BLF_PERCENTAGE_OAR2: i32 = cc!("Oar2");
pub const ABILITY_BLF_SUMMON_BUSY_UNITS: i32 = cc!("Btl2");
pub const ABILITY_BLF_CREATES_BLIGHT: i32 = cc!("Bli2");
pub const ABILITY_BLF_EXPLODES_ON_DEATH: i32 = cc!("Sds6");
pub const ABILITY_BLF_ALWAYS_AUTOCAST_FAE2: i32 = cc!("Fae2");
pub const ABILITY_BLF_REGENERATE_ONLY_AT_NIGHT: i32 = cc!("Mbt5");
pub const ABILITY_BLF_SHOW_SELECT_UNIT_BUTTON: i32 = cc!("Neu3");
pub const ABILITY_BLF_SHOW_UNIT_INDICATOR: i32 = cc!("Neu4");
pub const ABILITY_BLF_CHARGE_OWNING_PLAYER: i32 = cc!("Ans6");
pub const ABILITY_BLF_PERCENTAGE_ARM2: i32 = cc!("Arm2");
pub const ABILITY_BLF_TARGET_IS_INVULNERABLE: i32 = cc!("Pos3");
pub const ABILITY_BLF_TARGET_IS_MAGIC_IMMUNE: i32 = cc!("Pos4");
pub const ABILITY_BLF_KILL_ON_CASTER_DEATH: i32 = cc!("Ucb6");
pub const ABILITY_BLF_NO_TARGET_REQUIRED_REJ4: i32 = cc!("Rej4");
pub const ABILITY_BLF_ACCEPTS_GOLD: i32 = cc!("Rtn1");
pub const ABILITY_BLF_ACCEPTS_LUMBER: i32 = cc!("Rtn2");
pub const ABILITY_BLF_PREFER_HOSTILES_ROA5: i32 = cc!("Roa5");
pub const ABILITY_BLF_PREFER_FRIENDLIES_ROA6: i32 = cc!("Roa6");
pub const ABILITY_BLF_ROOTED_TURNING: i32 = cc!("Roo3");
pub const ABILITY_BLF_ALWAYS_AUTOCAST_SLO3: i32 = cc!("Slo3");
pub const ABILITY_BLF_HIDE_BUTTON: i32 = cc!("Ihid");
pub const ABILITY_BLF_USE_TELEPORT_CLUSTERING_ITP2: i32 = cc!("Itp2");
pub const ABILITY_BLF_IMMUNE_TO_MORPH_EFFECTS: i32 = cc!("Eth1");
pub const ABILITY_BLF_DOES_NOT_BLOCK_BUILDINGS: i32 = cc!("Eth2");
pub const ABILITY_BLF_AUTO_ACQUIRE_ATTACK_TARGETS: i32 = cc!("Gho1");
pub const ABILITY_BLF_IMMUNE_TO_MORPH_EFFECTS_GHO2: i32 = cc!("Gho2");
pub const ABILITY_BLF_DO_NOT_BLOCK_BUILDINGS: i32 = cc!("Gho3");
pub const ABILITY_BLF_INCLUDE_RANGED_DAMAGE: i32 = cc!("Ssk4");
pub const ABILITY_BLF_INCLUDE_MELEE_DAMAGE: i32 = cc!("Ssk5");
pub const ABILITY_BLF_MOVE_TO_PARTNER: i32 = cc!("coa2");
pub const ABILITY_BLF_CAN_BE_DISPELLED: i32 = cc!("cyc1");
pub const ABILITY_BLF_IGNORE_FRIENDLY_BUFFS: i32 = cc!("dvm6");
pub const ABILITY_BLF_DROP_ITEMS_ON_DEATH: i32 = cc!("inv2");
pub const ABILITY_BLF_CAN_USE_ITEMS: i32 = cc!("inv3");
pub const ABILITY_BLF_CAN_GET_ITEMS: i32 = cc!("inv4");
pub const ABILITY_BLF_CAN_DROP_ITEMS: i32 = cc!("inv5");
pub const ABILITY_BLF_REPAIRS_ALLOWED: i32 = cc!("liq4");
pub const ABILITY_BLF_CASTER_ONLY_SPLASH: i32 = cc!("mfl6");
pub const ABILITY_BLF_NO_TARGET_REQUIRED_IRL4: i32 = cc!("irl4");
pub const ABILITY_BLF_DISPEL_ON_ATTACK: i32 = cc!("irl5");
pub const ABILITY_BLF_AMOUNT_IS_RAW_VALUE: i32 = cc!("ipv3");
pub const ABILITY_BLF_SHARED_SPELL_COOLDOWN: i32 = cc!("spb2");
pub const ABILITY_BLF_SLEEP_ONCE: i32 = cc!("sla1");
pub const ABILITY_BLF_ALLOW_ON_ANY_PLAYER_SLOT: i32 = cc!("sla2");
pub const ABILITY_BLF_DISABLE_OTHER_ABILITIES: i32 = cc!("Ncl5");
pub const ABILITY_BLF_ALLOW_BOUNTY: i32 = cc!("Ntm4");
pub const ABILITY_SLF_ICON_NORMAL: i32 = cc!("aart");
pub const ABILITY_SLF_CASTER: i32 = cc!("acat");
pub const ABILITY_SLF_TARGET: i32 = cc!("atat");
pub const ABILITY_SLF_SPECIAL: i32 = cc!("asat");
pub const ABILITY_SLF_EFFECT: i32 = cc!("aeat");
pub const ABILITY_SLF_AREA_EFFECT: i32 = cc!("aaea");
pub const ABILITY_SLF_LIGHTNING_EFFECTS: i32 = cc!("alig");
pub const ABILITY_SLF_MISSILE_ART: i32 = cc!("amat");
pub const ABILITY_SLF_TOOLTIP_LEARN: i32 = cc!("aret");
pub const ABILITY_SLF_TOOLTIP_LEARN_EXTENDED: i32 = cc!("arut");
pub const ABILITY_SLF_TOOLTIP_NORMAL: i32 = cc!("atp1");
pub const ABILITY_SLF_TOOLTIP_TURN_OFF: i32 = cc!("aut1");
pub const ABILITY_SLF_TOOLTIP_NORMAL_EXTENDED: i32 = cc!("aub1");
pub const ABILITY_SLF_TOOLTIP_TURN_OFF_EXTENDED: i32 = cc!("auu1");
pub const ABILITY_SLF_NORMAL_FORM_UNIT_EME1: i32 = cc!("Eme1");
pub const ABILITY_SLF_SPAWNED_UNITS: i32 = cc!("Ndp1");
pub const ABILITY_SLF_ABILITY_FOR_UNIT_CREATION: i32 = cc!("Nrc1");
pub const ABILITY_SLF_NORMAL_FORM_UNIT_MIL1: i32 = cc!("Mil1");
pub const ABILITY_SLF_ALTERNATE_FORM_UNIT_MIL2: i32 = cc!("Mil2");
pub const ABILITY_SLF_BASE_ORDER_ID_ANS5: i32 = cc!("Ans5");
pub const ABILITY_SLF_MORPH_UNITS_GROUND: i32 = cc!("Ply2");
pub const ABILITY_SLF_MORPH_UNITS_AIR: i32 = cc!("Ply3");
pub const ABILITY_SLF_MORPH_UNITS_AMPHIBIOUS: i32 = cc!("Ply4");
pub const ABILITY_SLF_MORPH_UNITS_WATER: i32 = cc!("Ply5");
pub const ABILITY_SLF_UNIT_TYPE_ONE: i32 = cc!("Rai3");
pub const ABILITY_SLF_UNIT_TYPE_TWO: i32 = cc!("Rai4");
pub const ABILITY_SLF_UNIT_TYPE_SOD2: i32 = cc!("Sod2");
pub const ABILITY_SLF_SUMMON_1_UNIT_TYPE: i32 = cc!("Ist1");
pub const ABILITY_SLF_SUMMON_2_UNIT_TYPE: i32 = cc!("Ist2");
pub const ABILITY_SLF_RACE_TO_CONVERT: i32 = cc!("Ndc1");
pub const ABILITY_SLF_PARTNER_UNIT_TYPE: i32 = cc!("coa1");
pub const ABILITY_SLF_PARTNER_UNIT_TYPE_ONE: i32 = cc!("dcp1");
pub const ABILITY_SLF_PARTNER_UNIT_TYPE_TWO: i32 = cc!("dcp2");
pub const ABILITY_SLF_REQUIRED_UNIT_TYPE: i32 = cc!("tpi1");
pub const ABILITY_SLF_CONVERTED_UNIT_TYPE: i32 = cc!("tpi2");
pub const ABILITY_SLF_SPELL_LIST: i32 = cc!("spb1");
pub const ABILITY_SLF_BASE_ORDER_ID_SPB5: i32 = cc!("spb5");
pub const ABILITY_SLF_BASE_ORDER_ID_NCL6: i32 = cc!("Ncl6");
pub const ABILITY_SLF_ABILITY_UPGRADE_1: i32 = cc!("Neg3");
pub const ABILITY_SLF_ABILITY_UPGRADE_2: i32 = cc!("Neg4");
pub const ABILITY_SLF_ABILITY_UPGRADE_3: i32 = cc!("Neg5");
pub const ABILITY_SLF_ABILITY_UPGRADE_4: i32 = cc!("Neg6");
pub const ABILITY_SLF_SPAWN_UNIT_ID_NSY2: i32 = cc!("Nsy2");
pub const ITEM_IF_LEVEL: i32 = cc!("ilev");
pub const ITEM_IF_NUMBER_OF_CHARGES: i32 = cc!("iuse");
pub const ITEM_IF_COOLDOWN_GROUP: i32 = cc!("icid");
pub const ITEM_IF_MAX_HIT_POINTS: i32 = cc!("ihtp");
pub const ITEM_IF_HIT_POINTS: i32 = cc!("ihpc");
pub const ITEM_IF_PRIORITY: i32 = cc!("ipri");
pub const ITEM_IF_ARMOR_TYPE: i32 = cc!("iarm");
pub const ITEM_IF_TINTING_COLOR_RED: i32 = cc!("iclr");
pub const ITEM_IF_TINTING_COLOR_GREEN: i32 = cc!("iclg");
pub const ITEM_IF_TINTING_COLOR_BLUE: i32 = cc!("iclb");
pub const ITEM_IF_TINTING_COLOR_ALPHA: i32 = cc!("ical");
pub const ITEM_RF_SCALING_VALUE: i32 = cc!("isca");
pub const ITEM_BF_DROPPED_WHEN_CARRIER_DIES: i32 = cc!("idrp");
pub const ITEM_BF_CAN_BE_DROPPED: i32 = cc!("idro");
pub const ITEM_BF_PERISHABLE: i32 = cc!("iper");
pub const ITEM_BF_INCLUDE_AS_RANDOM_CHOICE: i32 = cc!("iprn");
pub const ITEM_BF_USE_AUTOMATICALLY_WHEN_ACQUIRED: i32 = cc!("ipow");
pub const ITEM_BF_CAN_BE_SOLD_TO_MERCHANTS: i32 = cc!("ipaw");
pub const ITEM_BF_ACTIVELY_USED: i32 = cc!("iusa");
pub const ITEM_SF_MODEL_USED: i32 = cc!("ifil");
pub const UNIT_IF_DEFENSE_TYPE: i32 = cc!("udty");
pub const UNIT_IF_ARMOR_TYPE: i32 = cc!("uarm");
pub const UNIT_IF_LOOPING_FADE_IN_RATE: i32 = cc!("ulfi");
pub const UNIT_IF_LOOPING_FADE_OUT_RATE: i32 = cc!("ulfo");
pub const UNIT_IF_AGILITY: i32 = cc!("uagc");
pub const UNIT_IF_INTELLIGENCE: i32 = cc!("uinc");
pub const UNIT_IF_STRENGTH: i32 = cc!("ustc");
pub const UNIT_IF_AGILITY_PERMANENT: i32 = cc!("uagm");
pub const UNIT_IF_INTELLIGENCE_PERMANENT: i32 = cc!("uinm");
pub const UNIT_IF_STRENGTH_PERMANENT: i32 = cc!("ustm");
pub const UNIT_IF_AGILITY_WITH_BONUS: i32 = cc!("uagb");
pub const UNIT_IF_INTELLIGENCE_WITH_BONUS: i32 = cc!("uinb");
pub const UNIT_IF_STRENGTH_WITH_BONUS: i32 = cc!("ustb");
pub const UNIT_IF_GOLD_BOUNTY_AWARDED_NUMBER_OF_DICE: i32 = cc!("ubdi");
pub const UNIT_IF_GOLD_BOUNTY_AWARDED_BASE: i32 = cc!("ubba");
pub const UNIT_IF_GOLD_BOUNTY_AWARDED_SIDES_PER_DIE: i32 = cc!("ubsi");
pub const UNIT_IF_LUMBER_BOUNTY_AWARDED_NUMBER_OF_DICE: i32 = cc!("ulbd");
pub const UNIT_IF_LUMBER_BOUNTY_AWARDED_BASE: i32 = cc!("ulba");
pub const UNIT_IF_LUMBER_BOUNTY_AWARDED_SIDES_PER_DIE: i32 = cc!("ulbs");
pub const UNIT_IF_LEVEL: i32 = cc!("ulev");
pub const UNIT_IF_FORMATION_RANK: i32 = cc!("ufor");
pub const UNIT_IF_ORIENTATION_INTERPOLATION: i32 = cc!("uori");
pub const UNIT_IF_ELEVATION_SAMPLE_POINTS: i32 = cc!("uept");
pub const UNIT_IF_TINTING_COLOR_RED: i32 = cc!("uclr");
pub const UNIT_IF_TINTING_COLOR_GREEN: i32 = cc!("uclg");
pub const UNIT_IF_TINTING_COLOR_BLUE: i32 = cc!("uclb");
pub const UNIT_IF_TINTING_COLOR_ALPHA: i32 = cc!("ucal");
pub const UNIT_IF_MOVE_TYPE: i32 = cc!("umvt");
pub const UNIT_IF_TARGETED_AS: i32 = cc!("utar");
pub const UNIT_IF_UNIT_CLASSIFICATION: i32 = cc!("utyp");
pub const UNIT_IF_HIT_POINTS_REGENERATION_TYPE: i32 = cc!("uhrt");
pub const UNIT_IF_PLACEMENT_PREVENTED_BY: i32 = cc!("upar");
pub const UNIT_IF_PRIMARY_ATTRIBUTE: i32 = cc!("upra");
pub const UNIT_RF_STRENGTH_PER_LEVEL: i32 = cc!("ustp");
pub const UNIT_RF_AGILITY_PER_LEVEL: i32 = cc!("uagp");
pub const UNIT_RF_INTELLIGENCE_PER_LEVEL: i32 = cc!("uinp");
pub const UNIT_RF_HIT_POINTS_REGENERATION_RATE: i32 = cc!("uhpr");
pub const UNIT_RF_MANA_REGENERATION: i32 = cc!("umpr");
pub const UNIT_RF_DEATH_TIME: i32 = cc!("udtm");
pub const UNIT_RF_FLY_HEIGHT: i32 = cc!("ufyh");
pub const UNIT_RF_TURN_RATE: i32 = cc!("umvr");
pub const UNIT_RF_ELEVATION_SAMPLE_RADIUS: i32 = cc!("uerd");
pub const UNIT_RF_FOG_OF_WAR_SAMPLE_RADIUS: i32 = cc!("ufrd");
pub const UNIT_RF_MAXIMUM_PITCH_ANGLE_DEGREES: i32 = cc!("umxp");
pub const UNIT_RF_MAXIMUM_ROLL_ANGLE_DEGREES: i32 = cc!("umxr");
pub const UNIT_RF_SCALING_VALUE: i32 = cc!("usca");
pub const UNIT_RF_ANIMATION_RUN_SPEED: i32 = cc!("urun");
pub const UNIT_RF_SELECTION_SCALE: i32 = cc!("ussc");
pub const UNIT_RF_SELECTION_CIRCLE_HEIGHT: i32 = cc!("uslz");
pub const UNIT_RF_SHADOW_IMAGE_HEIGHT: i32 = cc!("ushh");
pub const UNIT_RF_SHADOW_IMAGE_WIDTH: i32 = cc!("ushw");
pub const UNIT_RF_SHADOW_IMAGE_CENTER_X: i32 = cc!("ushx");
pub const UNIT_RF_SHADOW_IMAGE_CENTER_Y: i32 = cc!("ushy");
pub const UNIT_RF_ANIMATION_WALK_SPEED: i32 = cc!("uwal");
pub const UNIT_RF_DEFENSE: i32 = cc!("udfc");
pub const UNIT_RF_SIGHT_RADIUS: i32 = cc!("usir");
pub const UNIT_RF_PRIORITY: i32 = cc!("upri");
pub const UNIT_RF_SPEED: i32 = cc!("umvc");
pub const UNIT_RF_OCCLUDER_HEIGHT: i32 = cc!("uocc");
pub const UNIT_RF_HP: i32 = cc!("uhpc");
pub const UNIT_RF_MANA: i32 = cc!("umpc");
pub const UNIT_RF_ACQUISITION_RANGE: i32 = cc!("uacq");
pub const UNIT_RF_CAST_BACK_SWING: i32 = cc!("ucbs");
pub const UNIT_RF_CAST_POINT: i32 = cc!("ucpt");
pub const UNIT_RF_MINIMUM_ATTACK_RANGE: i32 = cc!("uamn");
pub const UNIT_BF_RAISABLE: i32 = cc!("urai");
pub const UNIT_BF_DECAYABLE: i32 = cc!("udec");
pub const UNIT_BF_IS_A_BUILDING: i32 = cc!("ubdg");
pub const UNIT_BF_USE_EXTENDED_LINE_OF_SIGHT: i32 = cc!("ulos");
pub const UNIT_BF_NEUTRAL_BUILDING_SHOWS_MINIMAP_ICON: i32 = cc!("unbm");
pub const UNIT_BF_HERO_HIDE_HERO_INTERFACE_ICON: i32 = cc!("uhhb");
pub const UNIT_BF_HERO_HIDE_HERO_MINIMAP_DISPLAY: i32 = cc!("uhhm");
pub const UNIT_BF_HERO_HIDE_HERO_DEATH_MESSAGE: i32 = cc!("uhhd");
pub const UNIT_BF_HIDE_MINIMAP_DISPLAY: i32 = cc!("uhom");
pub const UNIT_BF_SCALE_PROJECTILES: i32 = cc!("uscb");
pub const UNIT_BF_SELECTION_CIRCLE_ON_WATER: i32 = cc!("usew");
pub const UNIT_BF_HAS_WATER_SHADOW: i32 = cc!("ushr");
pub const UNIT_SF_NAME: i32 = cc!("unam");
pub const UNIT_SF_PROPER_NAMES: i32 = cc!("upro");
pub const UNIT_SF_GROUND_TEXTURE: i32 = cc!("uubs");
pub const UNIT_SF_SHADOW_IMAGE_UNIT: i32 = cc!("ushu");
pub const UNIT_WEAPON_IF_ATTACK_DAMAGE_NUMBER_OF_DICE: i32 = cc!("ua1d");
pub const UNIT_WEAPON_IF_ATTACK_DAMAGE_BASE: i32 = cc!("ua1b");
pub const UNIT_WEAPON_IF_ATTACK_DAMAGE_SIDES_PER_DIE: i32 = cc!("ua1s");
pub const UNIT_WEAPON_IF_ATTACK_MAXIMUM_NUMBER_OF_TARGETS: i32 = cc!("utc1");
pub const UNIT_WEAPON_IF_ATTACK_ATTACK_TYPE: i32 = cc!("ua1t");
pub const UNIT_WEAPON_IF_ATTACK_WEAPON_SOUND: i32 = cc!("ucs1");
pub const UNIT_WEAPON_IF_ATTACK_AREA_OF_EFFECT_TARGETS: i32 = cc!("ua1p");
pub const UNIT_WEAPON_IF_ATTACK_TARGETS_ALLOWED: i32 = cc!("ua1g");
pub const UNIT_WEAPON_RF_ATTACK_BACKSWING_POINT: i32 = cc!("ubs1");
pub const UNIT_WEAPON_RF_ATTACK_DAMAGE_POINT: i32 = cc!("udp1");
pub const UNIT_WEAPON_RF_ATTACK_BASE_COOLDOWN: i32 = cc!("ua1c");
pub const UNIT_WEAPON_RF_ATTACK_DAMAGE_LOSS_FACTOR: i32 = cc!("udl1");
pub const UNIT_WEAPON_RF_ATTACK_DAMAGE_FACTOR_MEDIUM: i32 = cc!("uhd1");
pub const UNIT_WEAPON_RF_ATTACK_DAMAGE_FACTOR_SMALL: i32 = cc!("uqd1");
pub const UNIT_WEAPON_RF_ATTACK_DAMAGE_SPILL_DISTANCE: i32 = cc!("usd1");
pub const UNIT_WEAPON_RF_ATTACK_DAMAGE_SPILL_RADIUS: i32 = cc!("usr1");
pub const UNIT_WEAPON_RF_ATTACK_PROJECTILE_SPEED: i32 = cc!("ua1z");
pub const UNIT_WEAPON_RF_ATTACK_PROJECTILE_ARC: i32 = cc!("uma1");
pub const UNIT_WEAPON_RF_ATTACK_AREA_OF_EFFECT_FULL_DAMAGE: i32 = cc!("ua1f");
pub const UNIT_WEAPON_RF_ATTACK_AREA_OF_EFFECT_MEDIUM_DAMAGE: i32 = cc!("ua1h");
pub const UNIT_WEAPON_RF_ATTACK_AREA_OF_EFFECT_SMALL_DAMAGE: i32 = cc!("ua1q");
pub const UNIT_WEAPON_RF_ATTACK_RANGE: i32 = cc!("ua1r");
pub const UNIT_WEAPON_BF_ATTACK_SHOW_UI: i32 = cc!("uwu1");
pub const UNIT_WEAPON_BF_ATTACKS_ENABLED: i32 = cc!("uaen");
pub const UNIT_WEAPON_BF_ATTACK_PROJECTILE_HOMING_ENABLED: i32 = cc!("umh1");
pub const UNIT_WEAPON_SF_ATTACK_PROJECTILE_ART: i32 = cc!("ua1m");

pub const MOVE_TYPE_UNKNOWN: i32 = 0;
pub const MOVE_TYPE_FOOT: i32 = 1;
pub const MOVE_TYPE_FLY: i32 = 2;
pub const MOVE_TYPE_HORSE: i32 = 4;
pub const MOVE_TYPE_HOVER: i32 = 8;
pub const MOVE_TYPE_FLOAT: i32 = 16;
pub const MOVE_TYPE_AMPHIBIOUS: i32 = 32;
pub const MOVE_TYPE_UNBUILDABLE: i32 = 64;

pub const TARGET_FLAG_NONE: i32 = 1;
pub const TARGET_FLAG_GROUND: i32 = 2;
pub const TARGET_FLAG_AIR: i32 = 4;
pub const TARGET_FLAG_STRUCTURE: i32 = 8;
pub const TARGET_FLAG_WARD: i32 = 16;
pub const TARGET_FLAG_ITEM: i32 = 32;
pub const TARGET_FLAG_TREE: i32 = 64;
pub const TARGET_FLAG_WALL: i32 = 128;
pub const TARGET_FLAG_DEBRIS: i32 = 256;
pub const TARGET_FLAG_DECORATION: i32 = 512;
pub const TARGET_FLAG_BRIDGE: i32 = 1024;

pub const DEFENSE_TYPE_LIGHT: i32 = 0;
pub const DEFENSE_TYPE_MEDIUM: i32 = 1;
pub const DEFENSE_TYPE_LARGE: i32 = 2;
pub const DEFENSE_TYPE_FORT: i32 = 3;
pub const DEFENSE_TYPE_NORMAL: i32 = 4;
pub const DEFENSE_TYPE_HERO: i32 = 5;
pub const DEFENSE_TYPE_DIVINE: i32 = 6;
pub const DEFENSE_TYPE_NONE: i32 = 7;

pub const HERO_ATTRIBUTE_STR: i32 = 1;
pub const HERO_ATTRIBUTE_INT: i32 = 2;
pub const HERO_ATTRIBUTE_AGI: i32 = 3;

pub const ARMOR_TYPE_WHOKNOWS: i32 = 0;
pub const ARMOR_TYPE_FLESH: i32 = 1;
pub const ARMOR_TYPE_METAL: i32 = 2;
pub const ARMOR_TYPE_WOOD: i32 = 3;
pub const ARMOR_TYPE_ETHREAL: i32 = 4;
pub const ARMOR_TYPE_STONE: i32 = 5;

pub const REGENERATION_TYPE_NONE: i32 = 0;
pub const REGENERATION_TYPE_ALWAYS: i32 = 1;
pub const REGENERATION_TYPE_BLIGHT: i32 = 2;
pub const REGENERATION_TYPE_DAY: i32 = 3;
pub const REGENERATION_TYPE_NIGHT: i32 = 4;

pub const UNIT_CATEGORY_GIANT: i32 = 1;
pub const UNIT_CATEGORY_UNDEAD: i32 = 2;
pub const UNIT_CATEGORY_SUMMONED: i32 = 4;
pub const UNIT_CATEGORY_MECHANICAL: i32 = 8;
pub const UNIT_CATEGORY_PEON: i32 = 16;
pub const UNIT_CATEGORY_SAPPER: i32 = 32;
pub const UNIT_CATEGORY_TOWNHALL: i32 = 64;
pub const UNIT_CATEGORY_ANCIENT: i32 = 128;
pub const UNIT_CATEGORY_NEUTRAL: i32 = 256;
pub const UNIT_CATEGORY_WARD: i32 = 512;
pub const UNIT_CATEGORY_STANDON: i32 = 1024;
pub const UNIT_CATEGORY_TAUREN: i32 = 2048;

pub const PATHING_FLAG_UNWALKABLE: i32 = 2;
pub const PATHING_FLAG_UNFLYABLE: i32 = 4;
pub const PATHING_FLAG_UNBUILDABLE: i32 = 8;
pub const PATHING_FLAG_UNPEONHARVEST: i32 = 16;
pub const PATHING_FLAG_BLIGHTED: i32 = 32;
pub const PATHING_FLAG_UNFLOATABLE: i32 = 64;
pub const PATHING_FLAG_UNAMPHIBIOUS: i32 = 128;
pub const PATHING_FLAG_UNITEMPLACABLE: i32 = 256;
