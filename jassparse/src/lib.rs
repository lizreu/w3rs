use pest_derive::Parser;

#[derive(Parser)]
#[grammar = "jass.pest"]
pub struct JassParser;

pub fn is_enum_type(name: &str) -> bool {
    matches!(
        name,
        "race"
            | "alliancetype"
            | "racepreference"
            | "igamestate"
            | "fgamestate"
            | "playerstate"
            | "playerscore"
            | "playergameresult"
            | "unitstate"
            | "aidifficulty"
            | "gameevent"
            | "playerevent"
            | "playerunitevent"
            | "widgetevent"
            | "dialogevent"
            | "unitevent"
            | "limitop"
            | "unittype"
            | "gamespeed"
            | "placement"
            | "startlocprio"
            | "gamedifficulty"
            | "gametype"
            | "mapflag"
            | "mapvisibility"
            | "mapsetting"
            | "mapdensity"
            | "mapcontrol"
            | "playercolor"
            | "playerslotstate"
            | "volumegroup"
            | "camerafield"
            | "blendmode"
            | "raritycontrol"
            | "texmapflags"
            | "fogstate"
            | "effecttype"
            | "version"
            | "itemtype"
            | "attacktype"
            | "damagetype"
            | "weapontype"
            | "soundtype"
            | "pathingtype"
            | "mousebuttontype"
            | "animtype"
            | "subanimtype"
            | "originframetype"
            | "framepointtype"
            | "textaligntype"
            | "frameeventtype"
            | "oskeytype"
            | "abilityintegerfield"
            | "abilityrealfield"
            | "abilitybooleanfield"
            | "abilitystringfield"
            | "abilityintegerlevelfield"
            | "abilityreallevelfield"
            | "abilitybooleanlevelfield"
            | "abilitystringlevelfield"
            | "abilityintegerlevelarrayfield"
            | "abilityreallevelarrayfield"
            | "abilitybooleanlevelarrayfield"
            | "abilitystringlevelarrayfield"
            | "unitintegerfield"
            | "unitrealfield"
            | "unitbooleanfield"
            | "unitstringfield"
            | "unitweaponintegerfield"
            | "unitweaponrealfield"
            | "unitweaponbooleanfield"
            | "unitweaponstringfield"
            | "itemintegerfield"
            | "itemrealfield"
            | "itembooleanfield"
            | "itemstringfield"
            | "movetype"
            | "targetflag"
            | "armortype"
            | "heroattribute"
            | "defensetype"
            | "regentype"
            | "unitcategory"
            | "pathingflag"
    )
}

pub fn is_agent_type(name: &str) -> bool {
    matches!(
        name,
        "agent"
            | "event"
            | "player"
            | "war3image"
            | "widget"
            | "unit"
            | "destructable"
            | "item"
            | "ability"
            | "buff"
            | "force"
            | "group"
            | "trigger"
            | "triggercondition"
            | "timer"
            | "location"
            | "region"
            | "rect"
            | "boolexpr"
            | "sound"
            | "conditionfunc"
            | "filterfunc"
            | "effect"
            | "fogmodifier"
            | "dialog"
            | "button"
            | "quest"
            | "questitem"
            | "defeatcondition"
            | "timerdialog"
            | "leaderboard"
            | "multiboard"
            | "multiboarditem"
            | "trackable"
            | "gamecache"
            | "hashtable"
    )
}
